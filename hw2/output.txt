<scalar_decl>inta=<expr>0</expr>,b;</scalar_decl><array_decl>unsignedcharc[<expr>1</expr>][<expr>2</expr>]={{<expr>'d'</expr>}};</array_decl><array_decl>constfloate[<expr>3</expr>][<expr>4</expr>][<expr>5</expr>]={<expr>0.000000</expr>};</array_decl><scalar_decl>doublef=<expr>6.700000</expr>,g,h,i=<expr>-<expr>8</expr></expr>;</scalar_decl><array_decl>constsignedinta[<expr>3</expr>];</array_decl><array_decl>constsignedlonginta[<expr><expr>c</expr>&<expr>b</expr></expr>];</array_decl><array_decl>constsignedlonglonginta[<expr><expr>a</expr>||<expr>b</expr></expr>];</array_decl><array_decl>constsignedshortinta[<expr>+<expr>c</expr></expr>];</array_decl><array_decl>constunsignedinta[<expr>-<expr>a</expr></expr>];</array_decl><array_decl>constunsignedlonginta[<expr>2.000000</expr>];</array_decl><array_decl>constunsignedlonglonginta[<expr>-<expr>3</expr></expr>];</array_decl><array_decl>constunsignedshortinta[<expr><expr><expr><expr><expr>1</expr>-<expr>2</expr></expr>+<expr><expr>c</expr>*<expr>d</expr></expr></expr>-<expr>c</expr></expr>^<expr>e</expr></expr>];</array_decl><array_decl>constinta[<expr><expr><expr>b</expr>&&<expr>c</expr></expr>&&<expr>d</expr></expr>];</array_decl><array_decl>constlonginta[<expr>3</expr>][<expr>3</expr>];</array_decl><array_decl>constlonglonginta[<expr>3</expr>][<expr>4</expr>];</array_decl><array_decl>constshortinta[<expr>3</expr>][<expr>3</expr>][<expr><expr><expr>b</expr>*<expr>c</expr></expr>&&<expr>d</expr></expr>];</array_decl><array_decl>inta[<expr>3</expr>][<expr>4</expr>][<expr>5</expr>][<expr>6</expr>][<expr>7</expr>];</array_decl><array_decl>longinta[<expr>3</expr>][<expr>x</expr>][<expr>y</expr>][<expr>+<expr>x</expr></expr>];</array_decl><array_decl>longlonginta[<expr>3</expr>][<expr><expr>foo</expr>()</expr>][<expr><expr>bar</expr>(<expr>a</expr>,<expr>b</expr>)</expr>];</array_decl><array_decl>shortinta[<expr>&<expr>c</expr></expr>];</array_decl><array_decl>constunsignedinta[<expr><expr>b</expr>++</expr>];</array_decl><array_decl>constunsignedlonginta[<expr><expr>b</expr>--</expr>];</array_decl><array_decl>constunsignedlonglonginta[<expr><expr>--<expr>b</expr></expr>*<expr><expr>c</expr>(<expr>d</expr>)</expr></expr>];</array_decl><array_decl>constunsignedshortinta[<expr>(int)<expr>3</expr></expr>];</array_decl><array_decl>constsignedinta[<expr>0</expr>];</array_decl><array_decl>constsignedlonginta[<expr>++<expr>a</expr></expr>];</array_decl><array_decl>constsignedlonglonginta[<expr>*<expr>b</expr></expr>];</array_decl><array_decl>constsignedshortinta[<expr>arr[<expr>3</expr>][<expr>4</expr>][<expr>5</expr>]</expr>];</array_decl><array_decl>constsignedlonglonga[<expr><expr>3</expr><<<expr>1</expr></expr>];</array_decl><array_decl>constsignedlonga[<expr><expr><expr><expr>2</expr>+<expr>1</expr></expr>>><expr>3</expr></expr>&<expr><expr>4</expr>%<expr>5</expr></expr></expr>][<expr>7</expr>];</array_decl><array_decl>constsignedchara[<expr>3</expr>][<expr><expr>(double)<expr>8787</expr></expr>+<expr>a</expr></expr>];</array_decl><array_decl>constsignedshorta[<expr>(char*)<expr>str</expr></expr>];</array_decl><array_decl>signeda[<expr>3</expr>];</array_decl><array_decl>unsigneda[<expr>3</expr>];</array_decl><array_decl>floata[<expr>3</expr>];</array_decl><array_decl>doublea[<expr>3</expr>];</array_decl><array_decl>voida[<expr>3</expr>];</array_decl><array_decl>consta[<expr>3</expr>];</array_decl><array_decl>constsignedinta[<expr>1</expr>];</array_decl><array_decl>unsignedlonglongb[<expr>2</expr>][<expr>3</expr>];</array_decl><array_decl>constunsignedshortc[<expr>4</expr>][<expr>5</expr>][<expr>6</expr>];</array_decl><array_decl>unsignedlongd[<expr>7</expr>][<expr>8</expr>];</array_decl><array_decl>constunsignedchare[<expr>9</expr>][<expr>10</expr>];</array_decl><array_decl>floatf[<expr>11</expr>];</array_decl><array_decl>constdoubleg[<expr>12</expr>][<expr>13</expr>][<expr>14</expr>][<expr>15</expr>];</array_decl><array_decl>constfloati[<expr>16</expr>][<expr>17</expr>][<expr>18</expr>],j[<expr>19</expr>],k[<expr>20</expr>][<expr>21</expr>],l[<expr>22</expr>][<expr>23</expr>][<expr>24</expr>];</array_decl><array_decl>shortm[<expr>25</expr>][<expr>26</expr>],n[<expr>27</expr>],o[<expr>28</expr>][<expr>29</expr>][<expr>30</expr>];</array_decl><array_decl>constsignedinta[<expr>3</expr>]={<expr>1</expr>,<expr>2</expr>,<expr>3</expr>,<expr>4</expr>,<expr>5</expr>};</array_decl><array_decl>constsignedlonginta[<expr><expr>c</expr>&<expr>b</expr></expr>]={<expr>2342</expr>};</array_decl><array_decl>constsignedlonglonginta[<expr><expr>a</expr>||<expr>b</expr></expr>];</array_decl><array_decl>constsignedshortinta[<expr>+<expr>c</expr></expr>];</array_decl><array_decl>constunsignedinta[<expr>-<expr>a</expr></expr>];</array_decl><array_decl>constunsignedlonginta[<expr>2.000000</expr>];</array_decl><array_decl>constunsignedlonglonginta[<expr>-<expr>3</expr></expr>];</array_decl><array_decl>constunsignedshortinta[<expr><expr><expr><expr><expr>1</expr>-<expr>2</expr></expr>+<expr><expr>c</expr>*<expr>d</expr></expr></expr>-<expr>c</expr></expr>^<expr>e</expr></expr>];</array_decl><array_decl>constinta[<expr><expr><expr>b</expr>&&<expr>c</expr></expr>&&<expr>d</expr></expr>];</array_decl><array_decl>constlonginta[<expr>4</expr>][<expr>3</expr>]={{<expr>234234</expr>},{<expr>"a"</expr>,<expr>"aaaa"</expr>,<expr>1234234</expr>},{<expr><expr><expr><expr>+<expr>___</expr></expr>+<expr>__</expr></expr>+<expr>___</expr></expr>+<expr><expr>___</expr>++</expr></expr>}};</array_decl><array_decl>constlonglonginta[<expr>3</expr>][<expr>4</expr>];</array_decl><array_decl>constshortinta[<expr>3</expr>][<expr>3</expr>][<expr><expr><expr>b</expr>*<expr>c</expr></expr>&&<expr>d</expr></expr>];</array_decl><array_decl>inta[<expr>3</expr>][<expr>4</expr>][<expr>5</expr>][<expr>6</expr>][<expr>7</expr>];</array_decl><array_decl>longinta[<expr>3</expr>][<expr>x</expr>][<expr>y</expr>][<expr>+<expr>x</expr></expr>];</array_decl><array_decl>longlonginta[<expr>3</expr>][<expr><expr>foo</expr>()</expr>][<expr><expr>bar</expr>(<expr>a</expr>,<expr>b</expr>)</expr>]={{{<expr>sakldfjsd</expr>,<expr>23423432</expr>,<expr>"sldfkjslf"</expr>,<expr>'a'</expr>},{<expr>"hahfshsdhsdhsdjfkjlsdkjlsdfkjlsdflkjsdfkjlsfkdjlsdfkjldfs"</expr>}},{{<expr>asdfasf</expr>,<expr>safsadfsd</expr>,<expr>asdfasdfsdf</expr>,<expr>asdfasdfadsfsdf</expr>,<expr>adfasdfsadfsadfasdfasdfasdfasdf</expr>},{<expr>"lkjdfslkjdfslkjdfoiuw3oiwriuorwe"</expr>,<expr>-1</expr>,<expr><expr><expr><expr>(char*)<expr>&<expr>a</expr></expr></expr>&<expr>aa</expr></expr>&<expr>a</expr></expr>&<expr>a</expr></expr>}},{<expr><expr><expr>(<expr>0</expr>)</expr>*<expr>(<expr><expr>0</expr>&<expr>0</expr></expr>)</expr></expr>+<expr>(<expr><expr><expr>0</expr>+<expr>0</expr></expr>&<expr><expr>0</expr>*<expr>0</expr></expr></expr>)</expr></expr>}};</array_decl><array_decl>shortinta[<expr>&<expr>c</expr></expr>];</array_decl><array_decl>constunsignedinta[<expr><expr>b</expr>++</expr>];</array_decl><array_decl>constunsignedlonginta[<expr><expr>b</expr>--</expr>];</array_decl><array_decl>constunsignedlonglonginta[<expr><expr>--<expr>b</expr></expr>*<expr><expr>c</expr>(<expr>d</expr>)</expr></expr>];</array_decl><array_decl>constunsignedshortinta[<expr>(int)<expr>3</expr></expr>];</array_decl><array_decl>constsignedinta[<expr>0</expr>];</array_decl><array_decl>constsignedlonginta[<expr>++<expr>a</expr></expr>];</array_decl><array_decl>constsignedlonglonginta[<expr>*<expr>b</expr></expr>];</array_decl><array_decl>constsignedshortinta[<expr>arr[<expr>3</expr>][<expr>4</expr>][<expr>5</expr>]</expr>];</array_decl><array_decl>constsignedlonglonga[<expr><expr>3</expr><<<expr>1</expr></expr>];</array_decl><array_decl>constsignedlonga[<expr><expr><expr><expr>2</expr>+<expr>1</expr></expr>>><expr>3</expr></expr>&<expr><expr>4</expr>%<expr>5</expr></expr></expr>][<expr>7</expr>];</array_decl><array_decl>constsignedchara[<expr>3</expr>][<expr><expr>(double)<expr>8787</expr></expr>+<expr>a</expr></expr>];</array_decl><array_decl>constsignedshorta[<expr>(char*)<expr>str</expr></expr>];</array_decl><array_decl>signeda[<expr>3</expr>];</array_decl><array_decl>unsigneda[<expr>3</expr>];</array_decl><array_decl>floata[<expr>3</expr>];</array_decl><array_decl>doublea[<expr>3</expr>];</array_decl><array_decl>voida[<expr>3</expr>];</array_decl><array_decl>consta[<expr>3</expr>];</array_decl><func_def>intmain(){<stmt><expr>(constsignedint)<expr>a</expr></expr>;</stmt><stmt><expr>(constsignedlongint)<expr>a</expr></expr>;</stmt><stmt><expr>(constsignedlonglongint)<expr>a</expr></expr>;</stmt><stmt><expr>(constsignedshortint)<expr>a</expr></expr>;</stmt><stmt><expr>(constunsignedint)<expr>a</expr></expr>;</stmt><stmt><expr>(constunsignedlongint)<expr>a</expr></expr>;</stmt><stmt><expr>(constunsignedlonglongint)<expr>a</expr></expr>;</stmt><stmt><expr>(constunsignedshortint)<expr>a</expr></expr>;</stmt><stmt><expr>(constint)<expr>a</expr></expr>;</stmt><stmt><expr>(constlongint)<expr>a</expr></expr>;</stmt><stmt><expr>(constlonglongint)<expr>a</expr></expr>;</stmt><stmt><expr>(constshortint)<expr>a</expr></expr>;</stmt><stmt><expr>(int)<expr>a</expr></expr>;</stmt><stmt><expr>(longint)<expr>a</expr></expr>;</stmt><stmt><expr>(longlongint)<expr>a</expr></expr>;</stmt><stmt><expr>(shortint)<expr>a</expr></expr>;</stmt><stmt><expr>(constunsignedint)<expr>a</expr></expr>;</stmt><stmt><expr>(constunsignedlongint)<expr>a</expr></expr>;</stmt><stmt><expr>(constunsignedlonglongint)<expr>a</expr></expr>;</stmt><stmt><expr>(constunsignedshortint)<expr>a</expr></expr>;</stmt><stmt><expr>(constsignedint)<expr>a</expr></expr>;</stmt><stmt><expr>(constsignedlongint)<expr>a</expr></expr>;</stmt><stmt><expr>(constsignedlonglongint)<expr>a</expr></expr>;</stmt><stmt><expr>(constsignedshortint)<expr>a</expr></expr>;</stmt><stmt><expr>(constsignedlonglong)<expr>a</expr></expr>;</stmt><stmt><expr>(constsignedlong)<expr>a</expr></expr>;</stmt><stmt><expr>(constsignedchar)<expr>a</expr></expr>;</stmt><stmt><expr>(constsignedshort)<expr>a</expr></expr>;</stmt><stmt><expr>(signed)<expr>a</expr></expr>;</stmt><stmt><expr>(unsigned)<expr>a</expr></expr>;</stmt><stmt><expr>(float)<expr>a</expr></expr>;</stmt><stmt><expr>(double)<expr>a</expr></expr>;</stmt><stmt><expr>(void)<expr>a</expr></expr>;</stmt><stmt><expr>(const)<expr>a</expr></expr>;</stmt><stmt><expr>(constsignedint*)<expr>a</expr></expr>;</stmt><stmt><expr>(constsignedlongint*)<expr>a</expr></expr>;</stmt><stmt><expr>(constsignedlonglongint*)<expr>a</expr></expr>;</stmt><stmt><expr>(constsignedshortint*)<expr>a</expr></expr>;</stmt><stmt><expr>(constsignedlonglong*)<expr>a</expr></expr>;</stmt><stmt><expr>(constsignedlong*)<expr>a</expr></expr>;</stmt><stmt><expr>(constsignedchar*)<expr>a</expr></expr>;</stmt><stmt><expr>(constsignedshort*)<expr>a</expr></expr>;</stmt><stmt><expr>(constsignedint*)<expr>a</expr></expr>;</stmt><stmt><expr>(constsignedlongint*)<expr>a</expr></expr>;</stmt><stmt><expr>(constsignedlonglongint*)<expr>a</expr></expr>;</stmt><stmt><expr>(constsignedshortint*)<expr>a</expr></expr>;</stmt><stmt><expr>(constsignedlonglong*)<expr>a</expr></expr>;</stmt><stmt><expr>(constsignedlong*)<expr>a</expr></expr>;</stmt><stmt><expr>(constsignedchar*)<expr>a</expr></expr>;</stmt><stmt><expr>(constsignedshort*)<expr>a</expr></expr>;</stmt><stmt><expr>(constsignedint*)<expr>a</expr></expr>;</stmt><stmt><expr>(constsignedlongint*)<expr>a</expr></expr>;</stmt><stmt><expr>(constsignedlonglongint*)<expr>a</expr></expr>;</stmt><stmt><expr>(constsignedshortint*)<expr>a</expr></expr>;</stmt><stmt><expr>(constsignedlonglong*)<expr>a</expr></expr>;</stmt><stmt><expr>(constsignedlong*)<expr>a</expr></expr>;</stmt><stmt><expr>(constsignedchar*)<expr>a</expr></expr>;</stmt><stmt><expr>(constsignedshort*)<expr>a</expr></expr>;</stmt>}</func_def><func_def>intmain(){<stmt><expr><expr>a</expr>+<expr>b</expr></expr>;</stmt><stmt><expr>+<expr>a</expr></expr>;</stmt><stmt><expr>-<expr>a</expr></expr>;</stmt><stmt><expr><expr>a</expr>-<expr>b</expr></expr>;</stmt><stmt><expr><expr>a</expr>*<expr>b</expr></expr>;</stmt><stmt><expr><expr>a</expr>/<expr>b</expr></expr>;</stmt><stmt><expr><expr>a</expr>%<expr>b</expr></expr>;</stmt><stmt><expr><expr>a</expr>++</expr>;</stmt><stmt><expr>++<expr>a</expr></expr>;</stmt><stmt><expr><expr>a</expr>--</expr>;</stmt><stmt><expr>--<expr>a</expr></expr>;</stmt><stmt><expr><expr>a</expr><<expr>b</expr></expr>;</stmt><stmt><expr><expr>a</expr><=<expr>b</expr></expr>;</stmt><stmt><expr><expr>a</expr>><expr>b</expr></expr>;</stmt><stmt><expr><expr>a</expr>>=<expr>b</expr></expr>;</stmt><stmt><expr><expr>a</expr>==<expr>b</expr></expr>;</stmt><stmt><expr><expr>a</expr>!=<expr>b</expr></expr>;</stmt><stmt><expr><expr>a</expr>=<expr>b</expr></expr>;</stmt><stmt><expr><expr>a</expr>&&<expr>b</expr></expr>;</stmt><stmt><expr><expr>a</expr>||<expr>b</expr></expr>;</stmt><stmt><expr>!<expr>a</expr></expr>;</stmt><stmt><expr>~<expr>a</expr></expr>;</stmt><stmt><expr><expr>a</expr>^<expr>b</expr></expr>;</stmt><stmt><expr><expr>a</expr>|<expr>b</expr></expr>;</stmt><stmt><expr><expr>a</expr>>><expr>b</expr></expr>;</stmt><stmt><expr><expr>a</expr><<<expr>b</expr></expr>;</stmt><stmt><expr>a[<expr>b</expr>]</expr>;</stmt><stmt><expr>a[<expr>b</expr>][<expr>c</expr>][<expr>d</expr>]</expr>;</stmt><stmt><expr><expr>foo</expr>()</expr>;</stmt><stmt><expr><expr>foo</expr>(<expr>a</expr>,<expr>b</expr>,<expr>++<expr>a</expr></expr>)</expr>;</stmt><stmt><expr>*<expr>a</expr></expr>;</stmt><stmt><expr>&<expr>a</expr></expr>;</stmt><stmt><expr>(char)<expr>a</expr></expr>;</stmt><stmt><expr>(char*)<expr>a</expr></expr>;</stmt><stmt><expr><expr>(<expr><expr>a</expr>+<expr>b</expr></expr>)</expr>*<expr>c</expr></expr>;</stmt><stmt><expr>a</expr>;</stmt><stmt><expr>1234</expr>;</stmt><stmt><expr>1234.029482</expr>;</stmt><stmt><expr>0.023431</expr>;</stmt><stmt><expr>0.000000</expr>;</stmt><stmt><expr>98438.000000</expr>;</stmt><stmt><expr>'c'</expr>;</stmt><stmt><expr>'"'</expr>;</stmt><stmt><expr>"aslfjsldfkjsad"</expr>;</stmt><stmt><expr>"'"</expr>;</stmt><stmt><expr>+<expr>123</expr></expr>;</stmt><stmt><expr>+<expr>0</expr></expr>;</stmt><stmt><expr>0</expr>;</stmt><stmt><expr>-<expr>0</expr></expr>;</stmt><stmt><expr>-<expr>3654</expr></expr>;</stmt><stmt><expr>+<expr>23.032000</expr></expr>;</stmt><stmt><expr>3112.323040</expr>;</stmt><stmt><expr>+<expr>0.321430</expr></expr>;</stmt><stmt><expr>+<expr>2132.000000</expr></expr>;</stmt><stmt><expr>+<expr>0.000000</expr></expr>;</stmt><stmt><expr>+<expr>0.000000</expr></expr>;</stmt><stmt><expr>-<expr>0.000000</expr></expr>;</stmt><stmt><expr>-<expr>0.000000</expr></expr>;</stmt><stmt><expr>-<expr>123645.313000</expr></expr>;</stmt><stmt><expr>-<expr>321321432.000000</expr></expr>;</stmt><stmt><expr>-<expr>1232342.313000</expr></expr>;</stmt><stmt><expr>-<expr>0.312445</expr></expr>;</stmt><stmt><expr>'c'</expr>;</stmt><stmt><expr>'\n'</expr>;</stmt><stmt><expr>'\\'</expr>;</stmt><stmt><expr>'\''</expr>;</stmt><stmt><expr>'\?'</expr>;</stmt><stmt><expr>'\321'</expr>;</stmt><stmt><expr>'\2'</expr>;</stmt><stmt><expr>'\12'</expr>;</stmt><stmt><expr>'\xabcde'</expr>;</stmt><stmt><expr>'\x123312dda'</expr>;</stmt><stmt><expr>'\uffff'</expr>;</stmt><stmt><expr>'\uaa12'</expr>;</stmt><stmt><expr>'\U3123dabc'</expr>;</stmt><stmt><expr>'\U314575FF'</expr>;</stmt><stmt><expr>"simple string"</expr>;</stmt><stmt><expr>" escaped \" string"</expr>;</stmt><stmt><expr>"escaped char '\\n'\' \""</expr>;</stmt><stmt><expr>"complex escape \123 \32 \443 \\"</expr>;</stmt><stmt><expr>"\x85354DBCEE    \102 \uffed \Ufaaaaaad   "</expr>;</stmt><stmt><expr>0</expr>;</stmt>}</func_def><scalar_decl>inta=<expr>1</expr>;</scalar_decl><scalar_decl>intb=<expr><expr>2</expr>+<expr>3</expr></expr>;</scalar_decl><scalar_decl>intc=<expr><expr>4</expr>+<expr><expr>5</expr>*<expr>6</expr></expr></expr>;</scalar_decl><scalar_decl>intd=<expr><expr>(<expr><expr>7</expr>-<expr>8</expr></expr>)</expr>/<expr>9</expr></expr>;</scalar_decl><scalar_decl>inte=<expr>++<expr>f</expr></expr>;</scalar_decl><scalar_decl>intg=<expr><expr>h</expr>--</expr>;</scalar_decl><scalar_decl>inti=<expr>-<expr>10</expr></expr>;</scalar_decl><scalar_decl>intj=<expr>-<expr>k</expr></expr>;</scalar_decl><scalar_decl>intl=<expr><expr>m</expr>()</expr>;</scalar_decl><scalar_decl>intn=<expr><expr>o</expr>(<expr>p</expr>,<expr>11</expr>,<expr>r[<expr>12</expr>][<expr>13</expr>]</expr>)</expr>;</scalar_decl><scalar_decl>ints=<expr><expr>*<expr>t</expr></expr>%<expr>14</expr></expr>;</scalar_decl><scalar_decl>intu=<expr><expr>&<expr>v</expr></expr>+<expr>15</expr></expr>;</scalar_decl><scalar_decl>intw=<expr>*<expr>(short)<expr>(<expr><expr>16</expr>/<expr>*<expr>x</expr></expr></expr>)</expr></expr></expr>;</scalar_decl><scalar_decl>inta=<expr><expr>1</expr>><expr>2</expr></expr>;</scalar_decl><scalar_decl>intb=<expr><expr>3</expr>>=<expr>4</expr></expr>;</scalar_decl><scalar_decl>intc=<expr><expr>5</expr><<expr><expr>6</expr>-<expr>a</expr></expr></expr>;</scalar_decl><scalar_decl>intd=<expr><expr>7</expr><=<expr>8</expr></expr>;</scalar_decl><scalar_decl>inte=<expr><expr>(<expr><expr>9</expr>==<expr>10</expr></expr>)</expr>+<expr>d</expr></expr>;</scalar_decl><scalar_decl>intf=<expr><expr>11</expr>!=<expr>12</expr></expr>;</scalar_decl><scalar_decl>intg=<expr><expr>!<expr>13</expr></expr>/<expr>c</expr></expr>;</scalar_decl><scalar_decl>inth=<expr><expr>!<expr>14</expr></expr>==<expr>15</expr></expr>;</scalar_decl><scalar_decl>inti=<expr><expr><expr><expr>16</expr>==<expr>17</expr></expr>&&<expr><expr>18</expr><<expr>(<expr><expr>19</expr>%<expr>h</expr></expr>)</expr></expr></expr>||<expr><expr>20</expr>!=<expr>21</expr></expr></expr>;</scalar_decl><scalar_decl>intj=<expr><expr><expr>22</expr>>=<expr>23</expr></expr>||<expr><expr>24</expr>&&<expr>!<expr>(<expr><expr>25</expr>==<expr>26</expr></expr>)</expr></expr></expr></expr>;</scalar_decl><scalar_decl>inta=<expr>b[<expr><expr>1</expr>&<expr>2</expr></expr>][<expr><expr>c</expr>|<expr>-<expr>d</expr></expr></expr>]</expr>;</scalar_decl><scalar_decl>inte=<expr>*<expr><expr>f</expr>++</expr></expr>;</scalar_decl><scalar_decl>intg=<expr>--<expr>*<expr>(<expr><expr>h</expr>=<expr>&<expr>i</expr></expr></expr>)</expr></expr></expr>;</scalar_decl><scalar_decl>intj=<expr><expr><expr><expr>~<expr>3</expr></expr><<<expr>4</expr></expr>>><expr>5</expr></expr>^<expr><expr>6</expr>><expr>7</expr></expr></expr>;</scalar_decl><scalar_decl>doublenum=<expr>0.000000</expr>;</scalar_decl><scalar_decl>doublenum=<expr>0.123400</expr>;</scalar_decl><scalar_decl>doublenum=<expr>123.456000</expr>;</scalar_decl><scalar_decl>doublenum=<expr>-<expr>0.000000</expr></expr>;</scalar_decl><scalar_decl>doublenum=<expr>-<expr>0.123400</expr></expr>;</scalar_decl><scalar_decl>doublenum=<expr>+<expr>0.000000</expr></expr>;</scalar_decl><scalar_decl>doublenum=<expr>+<expr>0.123400</expr></expr>;</scalar_decl><scalar_decl>doublenum=<expr>0.123400</expr>;</scalar_decl><scalar_decl>doublenum=<expr>1234.000000</expr>;</scalar_decl><scalar_decl>doublenum=<expr>-<expr>0.123400</expr></expr>;</scalar_decl><scalar_decl>doublenum=<expr>-<expr>1234.000000</expr></expr>;</scalar_decl><scalar_decl>doublenum=<expr>0.000000</expr>;</scalar_decl><scalar_decl>doublenum=<expr>0.123400</expr>;</scalar_decl><scalar_decl>doublenum=<expr>-<expr>0.000000</expr></expr>;</scalar_decl><scalar_decl>doublenum=<expr>-<expr>122222222222.000000</expr></expr>;</scalar_decl><scalar_decl>doublenum=<expr>-<expr>0.222222</expr></expr>;</scalar_decl><scalar_decl>doublenum=<expr>+<expr>0.012000</expr></expr>;</scalar_decl><func_def>intmain(){<scalar_decl>intn=<expr>10</expr>;</scalar_decl><stmt>for(<expr><expr>i</expr>=<expr>0</expr></expr>;<expr><expr>i</expr><<expr>n</expr></expr>;<expr><expr>i</expr>++</expr>)<stmt><expr><expr>a</expr>++</expr>;</stmt></stmt>}</func_def><func_decl>constsignedinta();</func_decl><func_decl>constsignedlonginta();</func_decl><func_decl>constsignedlonglonginta();</func_decl><func_decl>constsignedshortinta();</func_decl><func_decl>constunsignedinta(inta,intb);</func_decl><func_decl>constunsignedlonginta(char*a,voidb);</func_decl><func_decl>constunsignedlonglonginta();</func_decl><func_decl>constunsignedshortinta();</func_decl><func_decl>inta();</func_decl><func_decl>longinta();</func_decl><func_decl>longlonginta();</func_decl><func_decl>shortinta();</func_decl><func_decl>signeda();</func_decl><func_decl>unsigneda();</func_decl><func_decl>floata();</func_decl><func_decl>doublea();</func_decl><func_decl>voida();</func_decl><func_decl>consta();</func_decl><func_decl>constsignedint*a();</func_decl><func_decl>constsignedlongint*a();</func_decl><func_decl>constsignedlonglongint*a();</func_decl><func_decl>constsignedshortint*a();</func_decl><func_decl>voidfoo(constsignedinta,constsignedlonginta,constsignedlonglonginta,constsignedshortinta,constunsignedinta,constunsignedlonginta,constunsignedlonglonginta,constunsignedshortinta,constinta,constlonginta,constlonglonginta,constshortinta,inta,longinta,longlonginta,shortinta,constunsignedinta,constunsignedlonginta,constunsignedlonglonginta,constunsignedshortinta,constsignedinta,constsignedlonginta,constsignedlonglonginta,constsignedshortinta,constsignedlonglonga,constsignedlonga,constsignedchara,constsignedshorta,signeda,unsigneda,floata,doublea,voida,consta,constsignedint*a,constsignedlongint*a,constsignedlonglongint*a,constsignedshortint*a,constsignedlonglong*a,constsignedlong*a,constsignedchar*a,constsignedshort*a,constsignedint*a,constsignedlongint*a,constsignedlonglongint*a,constsignedshortint*a,constsignedlonglong*a,constsignedlong*a,constsignedchar*a,constsignedshort*a,constsignedint*a,constsignedlongint*a,constsignedlonglongint*a,constsignedshortint*a,constsignedlonglong*a,constsignedlong*a,constsignedchar*a,constsignedshort*a);</func_decl><func_decl>voida();</func_decl><func_decl>constsignedlonglongb(floatc);</func_decl><func_decl>unsigned*d(double*e,signedcharf);</func_decl><func_decl>signedshort*g();</func_decl><func_decl>void*h(constint*i,constj);</func_decl><func_def>voidfoo(constsignedinta,constsignedlonginta,constsignedlonglonginta,constsignedshortinta,constunsignedinta,constunsignedlonginta,constunsignedlonglonginta,constunsignedshortinta,constinta,constlonginta,constlonglonginta,constshortinta,inta,longinta,longlonginta,shortinta,constunsignedinta,constunsignedlonginta,constunsignedlonglonginta,constunsignedshortinta,constsignedinta,constsignedlonginta,constsignedlonglonginta,constsignedshortinta,constsignedlonglonga,constsignedlonga,constsignedchara,constsignedshorta,signeda,unsigneda,floata,doublea,voida,consta,constsignedint*a,constsignedlongint*a,constsignedlonglongint*a,constsignedshortint*a,constsignedlonglong*a,constsignedlong*a,constsignedchar*a,constsignedshort*a,constsignedint*a,constsignedlongint*a,constsignedlonglongint*a,constsignedshortint*a,constsignedlonglong*a,constsignedlong*a,constsignedchar*a,constsignedshort*a,constsignedint*a,constsignedlongint*a,constsignedlonglongint*a,constsignedshortint*a,constsignedlonglong*a,constsignedlong*a,constsignedchar*a,constsignedshort*a){<stmt><expr>bar</expr>;</stmt><stmt>{<scalar_decl>inta=<expr>87</expr>;</scalar_decl><stmt>{<scalar_decl>inta=<expr>87</expr>;</scalar_decl>}</stmt><stmt>if(<expr>878787878</expr>){<stmt>while(<expr><expr>bar</expr>=<expr><expr>878787878</expr>>><expr>bar</expr></expr></expr>)<stmt>if(<expr>bar</expr>){<stmt>continue;</stmt>}else{<stmt>if(<expr><expr>foo</expr>(<expr>0</expr>,<expr>878787878</expr>,<expr>0</expr>,<expr>878787878</expr>)</expr>){<stmt>return<expr>bar</expr>;</stmt>}else{<stmt>if(<expr>0</expr>){<stmt>for(<expr>0</expr>;<expr>bar</expr>;<expr>bar</expr>)<stmt>continue;</stmt></stmt>}else{<stmt>if(<expr>0</expr>){<stmt>break;</stmt>}else{<stmt>if(<expr>~<expr>0</expr></expr>){<stmt><expr>(int)<expr>878787878</expr></expr>;</stmt>}</stmt>}</stmt>}</stmt>}</stmt>}</stmt></stmt>}else{<stmt>while(<expr>878787878</expr>)<stmt><expr><expr><expr><expr>878787878</expr>!=<expr>!<expr>bar</expr></expr></expr>&&<expr>878787878</expr></expr>=<expr>bar</expr></expr>;</stmt></stmt>}</stmt><scalar_decl>inta=<expr>87</expr>;</scalar_decl>}</stmt><stmt>return;</stmt><stmt>continue;</stmt><stmt><expr>(int)<expr>878787878</expr></expr>;</stmt><stmt>break;</stmt><stmt><expr>bar</expr>;</stmt><stmt><expr><expr>bar</expr><<expr>bar</expr></expr>;</stmt><stmt>return<expr><expr>878787878</expr>--</expr>;</stmt><stmt>return<expr><expr><expr>+<expr>0</expr></expr>+<expr>0</expr></expr>-<expr>bar</expr></expr>;</stmt><stmt>if(<expr><expr><expr>0</expr>==<expr>bar</expr></expr>!=<expr>bar</expr></expr>){<stmt>while(<expr>0</expr>)<stmt>if(<expr><expr>0</expr><=<expr>0</expr></expr>){<stmt>return;</stmt>}</stmt></stmt>}</stmt><stmt>{<scalar_decl>inta=<expr>87</expr>;</scalar_decl><stmt>while(<expr>bar</expr>)<stmt><expr><expr>bar</expr>!=<expr>bar</expr></expr>;</stmt></stmt><scalar_decl>inta=<expr>87</expr>;</scalar_decl><scalar_decl>inta=<expr>87</expr>;</scalar_decl><scalar_decl>inta=<expr>87</expr>;</scalar_decl><stmt>switch(<expr><expr>0</expr>-<expr>bar</expr></expr>){case<expr><expr>0</expr>--</expr>:case<expr>878787878</expr>:case<expr><expr><expr>-<expr>bar</expr></expr><=<expr>0</expr></expr>|<expr><expr>0</expr>/<expr>878787878</expr></expr></expr>:case<expr>bar</expr>:}</stmt><stmt>{<scalar_decl>inta=<expr>87</expr>;</scalar_decl><scalar_decl>inta=<expr>87</expr>;</scalar_decl><stmt>if(<expr><expr>bar</expr>/<expr>+<expr>bar</expr></expr></expr>){<stmt>break;</stmt>}</stmt><stmt>break;</stmt><scalar_decl>inta=<expr>87</expr>;</scalar_decl><scalar_decl>inta=<expr>87</expr>;</scalar_decl><scalar_decl>inta=<expr>87</expr>;</scalar_decl><stmt>for(<expr><expr>bar</expr>*<expr>878787878</expr></expr>;<expr><expr>foo</expr>(<expr><expr>bar</expr>=<expr><expr>(int)<expr>0</expr></expr>>><expr>--<expr>(<expr>0</expr>)</expr></expr></expr></expr>,<expr><expr>0</expr>==<expr><expr>bar</expr>++</expr></expr>,<expr>--<expr><expr>(<expr>0</expr>)</expr>++</expr></expr>,<expr><expr><expr>foo</expr>(<expr>bar</expr>,<expr>bar</expr>,<expr>!<expr>++<expr>878787878</expr></expr></expr>,<expr>bar</expr>,<expr>arr[<expr>878787878</expr>][<expr>0</expr>][<expr>(int)<expr>0</expr></expr>][<expr>(int)<expr>0</expr></expr>]</expr>,<expr>878787878</expr>,<expr>bar</expr>,<expr><expr>++<expr>bar</expr></expr><=<expr>0</expr></expr>)</expr>/<expr>&<expr>bar</expr></expr></expr>,<expr>--<expr>878787878</expr></expr>,<expr><expr>foo</expr>(<expr>(int)<expr>bar</expr></expr>,<expr><expr>bar</expr><=<expr><expr>878787878</expr>-<expr>bar</expr></expr></expr>,<expr>0</expr>,<expr>878787878</expr>,<expr>(<expr>878787878</expr>)</expr>,<expr><expr><expr>878787878</expr>%<expr>878787878</expr></expr>^<expr>878787878</expr></expr>,<expr><expr>bar</expr>>><expr>0</expr></expr>,<expr>0</expr>)</expr>,<expr>bar</expr>)</expr>;<expr><expr>0</expr>++</expr>)<stmt>return<expr><expr>0</expr><=<expr><expr><expr>878787878</expr>--</expr>--</expr></expr>;</stmt></stmt>}</stmt><scalar_decl>inta=<expr>87</expr>;</scalar_decl><stmt>while(<expr><expr>bar</expr>-<expr>bar</expr></expr>)<stmt>while(<expr>arr[<expr>bar</expr>][<expr><expr>foo</expr>(<expr><expr>878787878</expr>||<expr><expr>bar</expr>--</expr></expr>,<expr>++<expr>0</expr></expr>,<expr>++<expr>bar</expr></expr>,<expr>(<expr>bar</expr>)</expr>,<expr>~<expr>bar</expr></expr>)</expr>]</expr>)<stmt>{<scalar_decl>inta=<expr>87</expr>;</scalar_decl><scalar_decl>inta=<expr>87</expr>;</scalar_decl><stmt>break;</stmt><scalar_decl>inta=<expr>87</expr>;</scalar_decl><scalar_decl>inta=<expr>87</expr>;</scalar_decl><scalar_decl>inta=<expr>87</expr>;</scalar_decl><scalar_decl>inta=<expr>87</expr>;</scalar_decl><stmt>continue;</stmt><scalar_decl>inta=<expr>87</expr>;</scalar_decl>}</stmt></stmt></stmt>}</stmt><stmt>while(<expr>(<expr>(int)<expr>0</expr></expr>)</expr>)<stmt><expr>878787878</expr>;</stmt></stmt><stmt>do<stmt>break;</stmt>while(<expr>arr[<expr>(int)<expr>878787878</expr></expr>][<expr><expr>bar</expr>||<expr>bar</expr></expr>]</expr>);</stmt><stmt>do<stmt>continue;</stmt>while(<expr><expr>0</expr>--</expr>);</stmt><stmt>switch(<expr>~<expr>bar</expr></expr>){case<expr><expr>878787878</expr>-<expr><expr>0</expr>++</expr></expr>:case<expr><expr>bar</expr><=<expr>bar</expr></expr>:case<expr><expr>-<expr>--<expr><expr>878787878</expr>--</expr></expr></expr>-<expr>0</expr></expr>:case<expr>(<expr><expr>foo</expr>(<expr>bar</expr>,<expr>bar</expr>,<expr>bar</expr>,<expr>878787878</expr>,<expr>0</expr>,<expr>0</expr>)</expr>)</expr>:default:}</stmt><stmt>for(<expr><expr><expr>foo</expr>(<expr>0</expr>,<expr>878787878</expr>)</expr>-<expr>~<expr>(int)<expr>878787878</expr></expr></expr></expr>;<expr><expr>bar</expr>++</expr>;<expr>++<expr>bar</expr></expr>)<stmt>continue;</stmt></stmt><stmt>for(;<expr>~<expr>bar</expr></expr>;<expr><expr>++<expr>878787878</expr></expr>=<expr><expr><expr>878787878</expr>*<expr>bar</expr></expr>^<expr><expr>(int)<expr>+<expr>0</expr></expr></expr><=<expr>0</expr></expr></expr></expr>)<stmt>if(<expr><expr><expr>foo</expr>(<expr><expr>878787878</expr>|<expr><expr>bar</expr>==<expr><expr>foo</expr>(<expr>0</expr>,<expr>878787878</expr>)</expr></expr></expr>,<expr><expr>878787878</expr>+<expr>bar</expr></expr>,<expr>878787878</expr>)</expr>++</expr>){}</stmt></stmt><stmt><expr>bar</expr>;</stmt><stmt>switch(<expr><expr>foo</expr>(<expr>0</expr>,<expr>!<expr>bar</expr></expr>,<expr>0</expr>,<expr><expr>878787878</expr>>=<expr>0</expr></expr>,<expr><expr>0</expr>*<expr>bar</expr></expr>)</expr>){case<expr>&<expr>0</expr></expr>:case<expr><expr>0</expr>>=<expr>arr[<expr><expr>bar</expr>*<expr>bar</expr></expr>][<expr>(<expr>0</expr>)</expr>][<expr>878787878</expr>][<expr><expr>-<expr>bar</expr></expr>%<expr>878787878</expr></expr>]</expr></expr>:case<expr>0</expr>:<stmt>if(<expr><expr>foo</expr>()</expr>){<stmt>for(<expr><expr><expr>bar</expr>&&<expr>0</expr></expr>&&<expr><expr>878787878</expr>!=<expr>bar</expr></expr></expr>;;<expr><expr>bar</expr>^<expr>878787878</expr></expr>)<stmt><expr>bar</expr>;</stmt></stmt>}else{<stmt>do<stmt>{<scalar_decl>inta=<expr>87</expr>;</scalar_decl><stmt>for(<expr><expr>arr[<expr>0</expr>][<expr>878787878</expr>][<expr>878787878</expr>]</expr>!=<expr>0</expr></expr>;<expr><expr>bar</expr><<<expr><expr>foo</expr>(<expr><expr>bar</expr><=<expr>bar</expr></expr>)</expr></expr>;<expr>+<expr><expr>foo</expr>(<expr>bar</expr>,<expr>(int)<expr>bar</expr></expr>,<expr><expr>878787878</expr>%<expr>bar</expr></expr>,<expr>bar</expr>,<expr>878787878</expr>)</expr></expr>)<stmt>switch(<expr>(<expr>arr[<expr>0</expr>][<expr>0</expr>][<expr>(int)<expr>0</expr></expr>][<expr>878787878</expr>]</expr>)</expr>){case<expr><expr>(int)<expr>0</expr></expr><<<expr>0</expr></expr>:case<expr>bar</expr>:<stmt>continue;</stmt>case<expr>arr[<expr>bar</expr>]</expr>:default:}</stmt></stmt>}</stmt>while(<expr>0</expr>);</stmt>}</stmt>case<expr>~<expr>878787878</expr></expr>:<stmt>if(<expr><expr>arr[<expr>878787878</expr>][<expr>878787878</expr>][<expr>bar</expr>][<expr>878787878</expr>][<expr>0</expr>]</expr>&&<expr>bar</expr></expr>){}else{}</stmt>default:<stmt>break;</stmt>}</stmt><stmt>if(<expr><expr>~<expr><expr>bar</expr>++</expr></expr>||<expr>(<expr><expr>foo</expr>(<expr>arr[<expr>878787878</expr>][<expr>bar</expr>][<expr>0</expr>][<expr>878787878</expr>]</expr>,<expr><expr>0</expr>==<expr>878787878</expr></expr>)</expr>)</expr></expr>){}else{<stmt>while(<expr>arr[<expr>0</expr>][<expr>arr[<expr>bar</expr>][<expr>0</expr>][<expr>bar</expr>][<expr>0</expr>][<expr>878787878</expr>]</expr>][<expr>878787878</expr>][<expr><expr>foo</expr>(<expr>bar</expr>,<expr>878787878</expr>,<expr>bar</expr>,<expr>878787878</expr>,<expr>bar</expr>,<expr>0</expr>)</expr>]</expr>)<stmt>continue;</stmt></stmt>}</stmt><stmt>while(<expr><expr>(int)<expr>bar</expr></expr>>><expr>878787878</expr></expr>)<stmt>if(<expr>(<expr><expr>--<expr>878787878</expr></expr>&&<expr><expr>0</expr><<expr>bar</expr></expr></expr>)</expr>){}else{}</stmt></stmt><stmt>continue;</stmt>}</func_def><func_def>voida(){<stmt><expr>1</expr>;</stmt>}</func_def><func_def>constsignedlonglongb(floatc){<stmt>return<expr>2</expr>;</stmt>}</func_def><func_def>unsigned*d(double*e,signedcharf){}</func_def><func_def>signedshort*g(){<stmt>return;</stmt>}</func_def><func_def>void*h(constint*i,constj){<stmt><expr>3</expr>;</stmt>}</func_def><func_def>intmain(){<stmt>for(<expr><expr>a</expr>=<expr>0</expr></expr>;<expr><expr>a</expr><<expr>0</expr></expr>;<expr><expr>a</expr>++</expr>)<stmt><expr><expr>a</expr>=<expr><expr>3</expr>+<expr>5</expr></expr></expr>;</stmt></stmt><stmt>for(<expr><expr>a</expr>=<expr>0</expr></expr>;<expr><expr>a</expr><<expr>0</expr></expr>;<expr><expr>a</expr>++</expr>)<stmt>{<stmt><expr><expr>a</expr>=<expr><expr>3</expr>+<expr>5</expr></expr></expr>;</stmt><stmt><expr><expr>b</expr>=<expr><expr>5</expr>%<expr>2</expr></expr></expr>;</stmt>}</stmt></stmt><stmt>while(<expr><expr>a</expr>--</expr>)<stmt>{<stmt><expr><expr>a</expr>++</expr>;</stmt><stmt><expr>--<expr>a</expr></expr>;</stmt>}</stmt></stmt><stmt>while(<expr>++<expr>a</expr></expr>)<stmt><expr><expr>a</expr>++</expr>;</stmt></stmt><stmt>do<stmt>{<stmt><expr><expr>a</expr>++</expr>;</stmt>}</stmt>while(<expr><expr>a</expr>--</expr>);</stmt><stmt>do<stmt><expr><expr>a</expr>++</expr>;</stmt>while(<expr><expr>a</expr>--</expr>);</stmt><stmt>for(<expr>x</expr>;<expr>y</expr>;<expr>z</expr>)<stmt>{}</stmt></stmt><stmt>for(;;)<stmt>{}</stmt></stmt>}</func_def><func_def>intmain(){<scalar_decl>inta=<expr>1</expr>;</scalar_decl><scalar_decl>intb=<expr>-<expr>1</expr></expr>;</scalar_decl><stmt>return<expr><expr>a</expr>+<expr>b</expr></expr>;</stmt>}</func_def><scalar_decl>constsignedinta,b;</scalar_decl><scalar_decl>constsignedlonginta,b;</scalar_decl><scalar_decl>constsignedlonglonginta,b;</scalar_decl><scalar_decl>constsignedshortinta,b;</scalar_decl><scalar_decl>constunsignedinta,b;</scalar_decl><scalar_decl>constunsignedlonginta,b;</scalar_decl><scalar_decl>constunsignedlonglonginta,b,d,e,f;</scalar_decl><scalar_decl>constunsignedshortinta,b;</scalar_decl><scalar_decl>constinta,b;</scalar_decl><scalar_decl>constlonginta,b;</scalar_decl><scalar_decl>constlonglonginta,b;</scalar_decl><scalar_decl>constshortinta,b;</scalar_decl><scalar_decl>inta,b;</scalar_decl><scalar_decl>longinta,b;</scalar_decl><scalar_decl>longlonginta;</scalar_decl><scalar_decl>shortinta,b;</scalar_decl><scalar_decl>constunsignedinta,b;</scalar_decl><scalar_decl>constunsignedlonginta,b;</scalar_decl><scalar_decl>constunsignedlonglonginta,b,_asdf8Alskdf;</scalar_decl><scalar_decl>constunsignedshortinta,b;</scalar_decl><scalar_decl>constsignedinta,b;</scalar_decl><scalar_decl>constsignedlonginta,b;</scalar_decl><scalar_decl>constsignedlonglonginta,b,____sdfda_asdf23i47akjfI,_,__,_____;</scalar_decl><scalar_decl>constsignedshortinta,b;</scalar_decl><scalar_decl>constsignedlonglonga,b;</scalar_decl><scalar_decl>constsignedlonga,b;</scalar_decl><scalar_decl>constsignedchara,b;</scalar_decl><scalar_decl>constsignedshorta,b;</scalar_decl><scalar_decl>signeda,b;</scalar_decl><scalar_decl>unsigneda,b;</scalar_decl><scalar_decl>floata,b;</scalar_decl><scalar_decl>doublea,b;</scalar_decl><scalar_decl>voida,b;</scalar_decl><scalar_decl>consta,b;</scalar_decl><scalar_decl>constsignedint*a,b;</scalar_decl><scalar_decl>constsignedlongint*a,b;</scalar_decl><scalar_decl>constsignedlonglongint*a,b;</scalar_decl><scalar_decl>constsignedshortint*a,b;</scalar_decl><scalar_decl>constsignedlonglong*a,b,*a,*as87asdfALFJAisljsijosl;</scalar_decl><scalar_decl>constsignedlong*a,b;</scalar_decl><scalar_decl>constsignedchar*a,b;</scalar_decl><scalar_decl>constsignedshort*a,b;</scalar_decl><scalar_decl>constsignedint*a,b;</scalar_decl><scalar_decl>constsignedlongint*a,b;</scalar_decl><scalar_decl>constsignedlonglongint*a,b;</scalar_decl><scalar_decl>constsignedshortint*a,b;</scalar_decl><scalar_decl>constsignedlonglong*a,b;</scalar_decl><scalar_decl>constsignedlong*a,b;</scalar_decl><scalar_decl>constsignedchar*a,b;</scalar_decl><scalar_decl>constsignedshort*a,b;</scalar_decl><scalar_decl>constsignedint*a,b;</scalar_decl><scalar_decl>constsignedlongint*a,b;</scalar_decl><scalar_decl>constsignedlonglongint*a,b;</scalar_decl><scalar_decl>constsignedshortint*a,b;</scalar_decl><scalar_decl>constsignedlonglong*a,b;</scalar_decl><scalar_decl>constsignedlong*a,b;</scalar_decl><scalar_decl>constsignedchar*a,b;</scalar_decl><scalar_decl>constsignedshort*a,b;</scalar_decl><scalar_decl>constsignedinta;</scalar_decl><scalar_decl>unsignedlonglongb;</scalar_decl><scalar_decl>constshortc;</scalar_decl><scalar_decl>unsignedlong*d;</scalar_decl><scalar_decl>constunsignedchare;</scalar_decl><scalar_decl>floatf;</scalar_decl><scalar_decl>constdoubleg;</scalar_decl><scalar_decl>void*h;</scalar_decl><scalar_decl>constfloati,*j,*k,l;</scalar_decl><scalar_decl>shortm,n,o;</scalar_decl><scalar_decl>constsignedinta=<expr>8787</expr>,b=<expr>'c'</expr>;</scalar_decl><scalar_decl>constsignedlonginta,b=<expr>2374</expr>;</scalar_decl><scalar_decl>constsignedlonglonginta=<expr>"sdfasfd"</expr>,b=<expr>lsdjklsdfkjsdf</expr>;</scalar_decl><scalar_decl>constsignedshortinta,b=<expr>0</expr>;</scalar_decl><scalar_decl>constunsignedinta,b;</scalar_decl><scalar_decl>constunsignedlonginta,b;</scalar_decl><scalar_decl>constunsignedlonglonginta,b,d=<expr><expr><expr>2134</expr>&<expr>asf</expr></expr>||<expr>(<expr><expr>'c'</expr>+<expr>++<expr>a</expr></expr></expr>)</expr></expr>,e,f;</scalar_decl><scalar_decl>constunsignedshortinta,b;</scalar_decl><scalar_decl>constinta,b;</scalar_decl><scalar_decl>constlonginta,b;</scalar_decl><scalar_decl>constlonglonginta,b;</scalar_decl><scalar_decl>constshortinta,b;</scalar_decl><scalar_decl>inta,b;</scalar_decl><scalar_decl>longinta,b;</scalar_decl><scalar_decl>longlonginta;</scalar_decl><scalar_decl>shortinta,b;</scalar_decl><scalar_decl>constunsignedinta,b;</scalar_decl><scalar_decl>constunsignedlonginta,b;</scalar_decl><scalar_decl>constunsignedlonglonginta,b,_asdf8Alskdf;</scalar_decl><scalar_decl>constunsignedshortinta,b;</scalar_decl><scalar_decl>constsignedinta,b;</scalar_decl><scalar_decl>constsignedlonginta,b;</scalar_decl><scalar_decl>constsignedlonglonginta,b,____sdfda_asdf23i47akjfI,_,__,_____;</scalar_decl><scalar_decl>constsignedshortinta,b;</scalar_decl><scalar_decl>constsignedlonglonga,b;</scalar_decl><scalar_decl>constsignedlonga,b;</scalar_decl><scalar_decl>constsignedchara,b;</scalar_decl><scalar_decl>constsignedshorta,b;</scalar_decl><scalar_decl>signeda,b;</scalar_decl><scalar_decl>unsigneda,b;</scalar_decl><scalar_decl>floata,b;</scalar_decl><scalar_decl>doublea,b;</scalar_decl><scalar_decl>voida,b;</scalar_decl><scalar_decl>consta,b;</scalar_decl><scalar_decl>constsignedint*a,b;</scalar_decl><scalar_decl>constsignedlongint*a,b;</scalar_decl><scalar_decl>constsignedlonglongint*a,b;</scalar_decl><scalar_decl>constsignedshortint*a,b;</scalar_decl><scalar_decl>constsignedlonglong*a,b,*a,*as87asdfALFJAisljsijosl;</scalar_decl><scalar_decl>constsignedlong*a,b;</scalar_decl><scalar_decl>constsignedchar*a,b;</scalar_decl><scalar_decl>constsignedshort*a,b;</scalar_decl><scalar_decl>constsignedint*a,b;</scalar_decl><scalar_decl>constsignedlongint*a,b;</scalar_decl><scalar_decl>constsignedlonglongint*a,b;</scalar_decl><scalar_decl>constsignedshortint*a,b;</scalar_decl><scalar_decl>constsignedlonglong*a,b;</scalar_decl><scalar_decl>constsignedlong*a,b;</scalar_decl><scalar_decl>constsignedchar*a,b;</scalar_decl><scalar_decl>constsignedshort*a,b;</scalar_decl><scalar_decl>constsignedint*a,b;</scalar_decl><scalar_decl>constsignedlongint*a,b;</scalar_decl><scalar_decl>constsignedlonglongint*a,b;</scalar_decl><scalar_decl>constsignedshortint*a,b;</scalar_decl><scalar_decl>constsignedlonglong*a,b;</scalar_decl><scalar_decl>constsignedlong*a,b;</scalar_decl><scalar_decl>constsignedchar*a,b;</scalar_decl><scalar_decl>constsignedshort*a,b;</scalar_decl><func_def>intmain(){}</func_def><func_def>intmain(){<stmt>if(<expr><expr>a[<expr>2</expr>]</expr><<expr>(<expr><expr>b</expr>+<expr>2</expr></expr>)</expr></expr>){<stmt><expr><expr>a[<expr>2</expr>]</expr>=<expr>-<expr>b</expr></expr></expr>;</stmt>}else{<stmt><expr><expr>&<expr>b</expr></expr>=<expr>*<expr>a[<expr>2</expr>]</expr></expr></expr>;</stmt>}</stmt><stmt>switch(<expr><expr>*<expr>c</expr></expr>&<expr>&<expr>d</expr></expr></expr>){case<expr>(<expr><expr>-<expr>e</expr></expr>%<expr><expr>func</expr>(<expr>tt</expr>)</expr></expr>)</expr>:<stmt><expr><expr>k</expr>=<expr><expr>func</expr>(<expr>a</expr>,<expr>b</expr>,<expr>c</expr>)</expr></expr>;</stmt>case<expr><expr>5878247</expr>>><expr>tt[<expr>2</expr>][<expr>&<expr>b</expr></expr>]</expr></expr>:<stmt><expr><expr>(char)<expr>bb</expr></expr>=<expr><expr>"ABC"</expr>+<expr>'D'</expr></expr></expr>;</stmt>default:}</stmt><stmt>while(<expr><expr><expr>a</expr>+<expr>-<expr>b</expr></expr></expr>!=<expr>c</expr></expr>)<stmt>{<stmt>do<stmt>{<stmt><expr><expr>RapOfChina</expr>(<expr>TizzyT</expr>,<expr>GALI</expr>,<expr>MCHotDog</expr>,<expr>Capper</expr>)</expr>;</stmt><stmt>if(<expr><expr>LeagueOfBaby</expr>==<expr>"win"</expr></expr>){<scalar_decl>char*KeyNG=<expr>"Bow down to KeyNG"</expr>;</scalar_decl><stmt>break;</stmt>}</stmt>}</stmt>while(<expr><expr><expr><expr>"Hello"</expr>+<expr>"World"</expr></expr><<<expr>"Z"</expr></expr>==<expr>GALI</expr></expr>);</stmt>}</stmt></stmt><stmt>for(<expr><expr>i</expr>=<expr>0</expr></expr>;<expr><expr>i</expr><=<expr>4</expr></expr>;<expr><expr>i</expr>++</expr>)<stmt>{<stmt>for(<expr><expr>j</expr>=<expr>97</expr></expr>;<expr><expr>j</expr><=<expr>122</expr></expr>;<expr><expr>j</expr>++</expr>)<stmt>{<stmt>if(<expr><expr>Input[<expr>i</expr>]</expr>==<expr>j</expr></expr>){<stmt><expr><expr>Input[<expr>i</expr>]</expr>=<expr><expr>219</expr>-<expr>j</expr></expr></expr>;</stmt><stmt>break;</stmt>}else{<stmt>continue;</stmt>}</stmt>}</stmt></stmt>}</stmt></stmt><stmt>for(;;)<stmt>break;</stmt></stmt><stmt>return<expr>114514</expr>;</stmt><stmt>return;</stmt>}</func_def><func_def>intmain(){<stmt><expr>0</expr>;</stmt><stmt>if(<expr>1</expr>){<stmt>return<expr>2</expr>;</stmt><stmt>switch(<expr>3</expr>){case<expr>4</expr>:case<expr>5</expr>:<stmt>{}</stmt>default:}</stmt><stmt><expr>6</expr>;</stmt>}else{<stmt>if(<expr>7</expr>){}</stmt><stmt>while(<expr>8</expr>)<stmt>do<stmt>{<scalar_decl>floata,b,c;</scalar_decl><stmt><expr>9</expr>;</stmt><stmt>continue;</stmt>}</stmt>while(<expr>10</expr>);</stmt></stmt>}</stmt><stmt>for(;<expr><expr>11</expr><<expr>12</expr></expr>;<expr>13</expr>)<stmt>{<stmt>continue;</stmt>}</stmt></stmt><stmt>return;</stmt>}</func_def><scalar_decl>constintINF=<expr>1000000000</expr>;</scalar_decl><scalar_decl>constintMOD=<expr>1000000007</expr>;</scalar_decl><func_def>intmain(){<stmt>return<expr>0</expr>;</stmt>}</func_def><func_def>intmain(){<scalar_decl>intnum;</scalar_decl><stmt><expr><expr>printf</expr>(<expr>"Enter a number: "</expr>)</expr>;</stmt><stmt><expr><expr>scanf</expr>(<expr>"%d"</expr>,<expr>&<expr>num</expr></expr>)</expr>;</stmt><stmt>if(<expr><expr>num</expr><<expr>0</expr></expr>){<stmt><expr><expr>printf</expr>(<expr>"The number is negative.\n"</expr>)</expr>;</stmt>}</stmt><stmt>if(<expr><expr>num</expr>==<expr>0</expr></expr>){<stmt><expr><expr>printf</expr>(<expr>"The number is zero.\n"</expr>)</expr>;</stmt>}</stmt><stmt>if(<expr><expr>num</expr>><expr>0</expr></expr>){<stmt><expr><expr>printf</expr>(<expr>"The number is positive.\n"</expr>)</expr>;</stmt>}</stmt><stmt>return<expr>0</expr>;</stmt>}</func_def><func_def>intmain(){<scalar_decl>intchoice;</scalar_decl><scalar_decl>intnum1,num2,result;</scalar_decl><stmt><expr><expr>printf</expr>(<expr>"Enter your choice:\n"</expr>)</expr>;</stmt><stmt><expr><expr>printf</expr>(<expr>"1. Addition\n"</expr>)</expr>;</stmt><stmt><expr><expr>printf</expr>(<expr>"2. Subtraction\n"</expr>)</expr>;</stmt><stmt><expr><expr>printf</expr>(<expr>"3. Multiplication\n"</expr>)</expr>;</stmt><stmt><expr><expr>printf</expr>(<expr>"4. Division\n"</expr>)</expr>;</stmt><stmt><expr><expr>scanf</expr>(<expr>"%d"</expr>,<expr>&<expr>choice</expr></expr>)</expr>;</stmt><stmt><expr><expr>printf</expr>(<expr>"Enter two numbers: "</expr>)</expr>;</stmt><stmt><expr><expr>scanf</expr>(<expr>"%d %d"</expr>,<expr>&<expr>num1</expr></expr>,<expr>&<expr>num2</expr></expr>)</expr>;</stmt><stmt>switch(<expr>choice</expr>){case<expr>1</expr>:<stmt><expr><expr>result</expr>=<expr><expr>num1</expr>+<expr>num2</expr></expr></expr>;</stmt><stmt><expr><expr>printf</expr>(<expr>"Result: %d\n"</expr>,<expr>result</expr>)</expr>;</stmt><stmt>break;</stmt>case<expr>2</expr>:<stmt><expr><expr>result</expr>=<expr><expr>num1</expr>-<expr>num2</expr></expr></expr>;</stmt><stmt><expr><expr>printf</expr>(<expr>"Result: %d\n"</expr>,<expr>result</expr>)</expr>;</stmt><stmt>break;</stmt>case<expr>3</expr>:<stmt><expr><expr>result</expr>=<expr><expr>num1</expr>*<expr>num2</expr></expr></expr>;</stmt><stmt><expr><expr>printf</expr>(<expr>"Result: %d\n"</expr>,<expr>result</expr>)</expr>;</stmt><stmt>break;</stmt>case<expr>4</expr>:<stmt>if(<expr><expr>num2</expr>!=<expr>0</expr></expr>){<stmt><expr><expr>result</expr>=<expr><expr>num1</expr>/<expr>num2</expr></expr></expr>;</stmt><stmt><expr><expr>printf</expr>(<expr>"Result: %d\n"</expr>,<expr>result</expr>)</expr>;</stmt>}else{<stmt><expr><expr>printf</expr>(<expr>"Cannot divide by zero.\n"</expr>)</expr>;</stmt>}</stmt><stmt>break;</stmt>default:<stmt><expr><expr>printf</expr>(<expr>"Invalid choice.\n"</expr>)</expr>;</stmt>}</stmt><stmt>return<expr>0</expr>;</stmt>}</func_def><func_def>intadd(inta,intb){<stmt>return<expr><expr>a</expr>+<expr>b</expr></expr>;</stmt>}</func_def><func_def>intsubtract(inta,intb){<stmt>return<expr><expr>a</expr>-<expr>b</expr></expr>;</stmt>}</func_def><func_def>intmultiply(inta,intb){<stmt>return<expr><expr>a</expr>*<expr>b</expr></expr>;</stmt>}</func_def><func_def>intdivide(inta,intb){<stmt>if(<expr><expr>b</expr>!=<expr>0</expr></expr>){<stmt>return<expr><expr>a</expr>/<expr>b</expr></expr>;</stmt>}else{<stmt><expr><expr>printf</expr>(<expr>"Cannot divide by zero.\n"</expr>)</expr>;</stmt><stmt>return<expr>0</expr>;</stmt>}</stmt>}</func_def><func_def>intmain(){<scalar_decl>intchoice;</scalar_decl><scalar_decl>intnum1,num2,result;</scalar_decl><stmt><expr><expr>printf</expr>(<expr>"Enter your choice:\n"</expr>)</expr>;</stmt><stmt><expr><expr>printf</expr>(<expr>"1. Addition\n"</expr>)</expr>;</stmt><stmt><expr><expr>printf</expr>(<expr>"2. Subtraction\n"</expr>)</expr>;</stmt><stmt><expr><expr>printf</expr>(<expr>"3. Multiplication\n"</expr>)</expr>;</stmt><stmt><expr><expr>printf</expr>(<expr>"4. Division\n"</expr>)</expr>;</stmt><stmt><expr><expr>scanf</expr>(<expr>"%d"</expr>,<expr>&<expr>choice</expr></expr>)</expr>;</stmt><stmt><expr><expr>printf</expr>(<expr>"Enter two numbers: "</expr>)</expr>;</stmt><stmt><expr><expr>scanf</expr>(<expr>"%d %d"</expr>,<expr>&<expr>num1</expr></expr>,<expr>&<expr>num2</expr></expr>)</expr>;</stmt><stmt>switch(<expr>choice</expr>){case<expr>1</expr>:<stmt><expr><expr>result</expr>=<expr><expr>add</expr>(<expr>num1</expr>,<expr>num2</expr>)</expr></expr>;</stmt><stmt><expr><expr>printf</expr>(<expr>"Result: %d\n"</expr>,<expr>result</expr>)</expr>;</stmt><stmt>break;</stmt>case<expr>2</expr>:<stmt><expr><expr>result</expr>=<expr><expr>subtract</expr>(<expr>num1</expr>,<expr>num2</expr>)</expr></expr>;</stmt><stmt><expr><expr>printf</expr>(<expr>"Result: %d\n"</expr>,<expr>result</expr>)</expr>;</stmt><stmt>break;</stmt>case<expr>3</expr>:<stmt><expr><expr>result</expr>=<expr><expr>multiply</expr>(<expr>num1</expr>,<expr>num2</expr>)</expr></expr>;</stmt><stmt><expr><expr>printf</expr>(<expr>"Result: %d\n"</expr>,<expr>result</expr>)</expr>;</stmt><stmt>break;</stmt>case<expr>4</expr>:<stmt><expr><expr>result</expr>=<expr><expr>divide</expr>(<expr>num1</expr>,<expr>num2</expr>)</expr></expr>;</stmt><stmt><expr><expr>printf</expr>(<expr>"Result: %d\n"</expr>,<expr>result</expr>)</expr>;</stmt><stmt>break;</stmt>default:<stmt><expr><expr>printf</expr>(<expr>"Invalid choice.\n"</expr>)</expr>;</stmt>}</stmt><stmt>return<expr>0</expr>;</stmt>}</func_def><scalar_decl>intglobalVar;</scalar_decl><func_decl>intadd(inta,intb);</func_decl><func_def>intmain(){<scalar_decl>intlocalVar=<expr>10</expr>;</scalar_decl><scalar_decl>intresult=<expr><expr>add</expr>(<expr>globalVar</expr>,<expr>localVar</expr>)</expr>;</scalar_decl><stmt>return<expr>result</expr>;</stmt>}</func_def><func_def>intadd(inta,intb){<stmt>return<expr><expr>a</expr>+<expr>b</expr></expr>;</stmt>}</func_def><scalar_decl>intglobal_var=<expr>10</expr>;</scalar_decl><func_decl>intadd(inta,intb);</func_decl><func_decl>voidprint_array(intarr,intsize);</func_decl><func_def>intmain(){<scalar_decl>intlocal_var=<expr>20</expr>;</scalar_decl><scalar_decl>intresult=<expr><expr>add</expr>(<expr>global_var</expr>,<expr>local_var</expr>)</expr>;</scalar_decl><array_decl>intnumbers[<expr>5</expr>]={<expr>1</expr>,<expr>2</expr>,<expr>3</expr>,<expr>4</expr>,<expr>5</expr>};</array_decl><stmt><expr><expr>printf</expr>(<expr>"Result: %d\n"</expr>,<expr>result</expr>)</expr>;</stmt><stmt><expr><expr>print_array</expr>(<expr>numbers</expr>,<expr>5</expr>)</expr>;</stmt><stmt>return<expr>0</expr>;</stmt>}</func_def><func_def>intadd(inta,intb){<stmt>return<expr><expr>a</expr>+<expr>b</expr></expr>;</stmt>}</func_def><func_def>voidprint_array(intarr,intsize){<stmt><expr><expr>printf</expr>(<expr>"Array: "</expr>)</expr>;</stmt><scalar_decl>inti;</scalar_decl><stmt>for(<expr><expr>i</expr>=<expr>0</expr></expr>;<expr><expr>i</expr><<expr>size</expr></expr>;<expr><expr>i</expr>++</expr>)<stmt>{<stmt><expr><expr>printf</expr>(<expr>"%d "</expr>,<expr>arr[<expr>i</expr>]</expr>)</expr>;</stmt>}</stmt></stmt><stmt><expr><expr>printf</expr>(<expr>"\n"</expr>)</expr>;</stmt>}</func_def><scalar_decl>constintconst_global=<expr>10</expr>;</scalar_decl><scalar_decl>signedlonglonginta;</scalar_decl><scalar_decl>unsignedshortintb;</scalar_decl><scalar_decl>floatc;</scalar_decl><scalar_decl>doubled;</scalar_decl><scalar_decl>void*ptr;</scalar_decl><scalar_decl>charch;</scalar_decl><array_decl>intarr[<expr>2</expr>][<expr>2</expr>]={{<expr>1</expr>,<expr>2</expr>},{<expr>3</expr>,<expr>4</expr>}};</array_decl><scalar_decl>int*pointer;</scalar_decl><func_decl>voidprintArray(int*array);</func_decl><func_decl>intsum(intx,inty);</func_decl><func_def>intsum(intx,inty){<stmt>return<expr><expr>x</expr>+<expr>y</expr></expr>;</stmt>}</func_def><func_def>voidprintArray(int*array){<stmt>for(<expr><expr>i</expr>=<expr>0</expr></expr>;<expr><expr>i</expr><<expr>2</expr></expr>;<expr><expr>i</expr>++</expr>)<stmt>{<stmt>for(<expr><expr>j</expr>=<expr>0</expr></expr>;<expr><expr>j</expr><<expr>2</expr></expr>;<expr><expr>j</expr>++</expr>)<stmt>{<stmt><expr><expr>printf</expr>(<expr>"%d "</expr>,<expr>array[<expr>i</expr>][<expr>j</expr>]</expr>)</expr>;</stmt>}</stmt></stmt><stmt><expr><expr>printf</expr>(<expr>"\n"</expr>)</expr>;</stmt>}</stmt></stmt>}</func_def><func_def>int*return_ptr(){<stmt>return<expr>0</expr>;</stmt>}</func_def><func_def>intmain(){<scalar_decl>intnum1=<expr>10</expr>,num2=<expr>20</expr>,result;</scalar_decl><scalar_decl>int*a,*p,c;</scalar_decl><array_decl>intarr1[<expr>2</expr>][<expr>2</expr>]={{<expr>5</expr>,<expr>6</expr>},{<expr>7</expr>,<expr>8</expr>}};</array_decl><stmt><expr><expr>result</expr>=<expr><expr>sum</expr>(<expr>num1</expr>,<expr>num2</expr>)</expr></expr>;</stmt><stmt><expr><expr>printf</expr>(<expr>"The sum is: %d\n"</expr>,<expr>result</expr>)</expr>;</stmt><stmt><expr><expr>printArray</expr>(<expr>arr</expr>)</expr>;</stmt><stmt>if(<expr><expr>result</expr>><expr>20</expr></expr>){<stmt><expr><expr>printf</expr>(<expr>"Result is greater than 20\n"</expr>)</expr>;</stmt>}else{<stmt><expr><expr>printf</expr>(<expr>"Result is not greater than 20\n"</expr>)</expr>;</stmt>}</stmt><stmt>switch(<expr>result</expr>){case<expr>20</expr>:<stmt><expr><expr>printf</expr>(<expr>"Result is 20\n"</expr>)</expr>;</stmt><stmt>break;</stmt>case<expr>30</expr>:<stmt><expr><expr>printf</expr>(<expr>"Result is 30\n"</expr>)</expr>;</stmt><stmt>break;</stmt>default:<stmt><expr><expr>printf</expr>(<expr>"Result is not 20 or 30\n"</expr>)</expr>;</stmt>}</stmt><stmt>while(<expr><expr>num1</expr><<expr>15</expr></expr>)<stmt>{<stmt><expr><expr>num1</expr>++</expr>;</stmt>}</stmt></stmt><stmt>do<stmt>{<stmt><expr><expr>num2</expr>--</expr>;</stmt>}</stmt>while(<expr><expr>num2</expr>><expr>15</expr></expr>);</stmt><stmt>for(<expr><expr>i</expr>=<expr>0</expr></expr>;<expr><expr>i</expr><<expr>10</expr></expr>;<expr><expr>i</expr>++</expr>)<stmt>{<stmt><expr><expr>printf</expr>(<expr>"%d "</expr>,<expr>i</expr>)</expr>;</stmt>}</stmt></stmt><stmt>for(;;)<stmt>{<stmt><expr><expr>printf</expr>(<expr>"%d "</expr>,<expr>i</expr>)</expr>;</stmt>}</stmt></stmt><stmt>{<scalar_decl>inta=<expr>5</expr>;</scalar_decl><stmt><expr><expr>printf</expr>(<expr>"\nValue of a: %d\n"</expr>,<expr>a</expr>)</expr>;</stmt>}</stmt><stmt>return<expr>0</expr>;</stmt>}</func_def><scalar_decl>inta=<expr>0</expr>,b;</scalar_decl><array_decl>unsignedcharc[<expr>1</expr>][<expr>2</expr>]={{<expr>'d'</expr>}};</array_decl><array_decl>constfloate[<expr>3</expr>][<expr>4</expr>][<expr>5</expr>]={<expr>0.000000</expr>};</array_decl><scalar_decl>doublef=<expr>6.700000</expr>,g,h,i=<expr>-<expr>8</expr></expr>;</scalar_decl>