   0  $accept : program $end

   1  program : code

   2  code : code func_declaration
   3       | code func_definition
   4       | func_declaration
   5       | func_definition

   6  func_declaration : types func_symbol '(' parameters ')' ';'

   7  func_definition : types func_symbol '(' parameters ')' compound_statements

   8  func_symbol : ID

   9  parameters : parameters ',' types ID
  10             | parameters ',' types '*' ID
  11             | types ID
  12             | types '*' ID
  13             |

  14  scalar_declaration : types scalars ';'

  15  scalars : scalars ',' scalar
  16          | scalar

  17  scalar : '*' ID '=' expression
  18         | ID '=' expression
  19         | '*' ID
  20         | ID

  21  array_declaration : types arrays ';'

  22  arrays : arrays ',' array
  23         | array

  24  array : '*' ID array_shape '=' '{' array_content_elements '}'
  25        | ID array_shape '=' '{' array_content_elements '}'
  26        | '*' ID array_shape
  27        | ID array_shape

  28  array_shape : array_shape '[' expression ']'
  29              | '[' expression ']'

  30  array_content_elements : array_content_element ',' array_content_elements
  31                         | array_content_element

  32  array_content_element : '{' array_content_elements '}'
  33                        | expression

  34  expression : expr_4
  35             |

  36  expr_4 : expr_4 '+' expr_3
  37         | expr_4 '-' expr_3
  38         | expr_3

  39  expr_3 : expr_3 '*' expr_2
  40         | expr_3 '/' expr_2
  41         | expr_2

  42  expr_2 : expr_1

  43  expr_1 : '(' expression ')'
  44         | variable '(' func_call_parameters ')'
  45         | variable
  46         | literal
  47         | Null

  48  func_call_parameters : func_call_parameters ',' expression
  49                       | expression

  50  variable : ID

  51  literal : INT
  52          | FLOAT
  53          | CHAR
  54          | STR

  55  statements : statements statement
  56             | statement

  57  statement : expression ';'
  58            | if_statement
  59            | switch_statement
  60            | while_statement
  61            | for_statement
  62            | return_statement
  63            | break_statement
  64            | continue_statement
  65            | compound_statements

  66  if_statement : IF '(' expression ')' compound_statements
  67               | IF '(' expression ')' compound_statements ELSE compound_statements

  68  switch_statement : SWITCH '(' expression ')' '{' switch_cases '}'

  69  switch_cases : switch_cases switch_case
  70               | switch_case

  71  switch_case : CASE expression ':' statements
  72              | DEFAULT ':' statements
  73              | CASE expression ':'
  74              | DEFAULT ':'

  75  while_statement : WHILE '(' expression ')' statement
  76                  | DO statement WHILE '(' expression ')' ';'

  77  for_statement : FOR '(' for_parameters ')' statement

  78  for_parameters : expression ';' expression ';' expression

  79  return_statement : RETURN expression ';'

  80  break_statement : BREAK ';'

  81  continue_statement : CONTINUE ';'

  82  compound_statements : scope_begin compound_statement scope_end
  83                      | '{' '}'

  84  compound_statement : compound_statement scalar_declaration
  85                     | compound_statement array_declaration
  86                     | compound_statement statement
  87                     | scalar_declaration
  88                     | array_declaration
  89                     | statement

  90  types : types TYPE
  91        | TYPE

  92  scope_begin : '{'

  93  scope_end : '}'

state 0
	$accept : . program $end  (0)

	TYPE  shift 1
	.  error

	program  goto 2
	code  goto 3
	func_declaration  goto 4
	func_definition  goto 5
	types  goto 6


state 1
	types : TYPE .  (91)

	.  reduce 91


state 2
	$accept : program . $end  (0)

	$end  accept


state 3
	program : code .  (1)
	code : code . func_declaration  (2)
	code : code . func_definition  (3)

	TYPE  shift 1
	$end  reduce 1

	func_declaration  goto 7
	func_definition  goto 8
	types  goto 6


state 4
	code : func_declaration .  (4)

	.  reduce 4


state 5
	code : func_definition .  (5)

	.  reduce 5


state 6
	func_declaration : types . func_symbol '(' parameters ')' ';'  (6)
	func_definition : types . func_symbol '(' parameters ')' compound_statements  (7)
	types : types . TYPE  (90)

	TYPE  shift 9
	ID  shift 10
	.  error

	func_symbol  goto 11


state 7
	code : code func_declaration .  (2)

	.  reduce 2


state 8
	code : code func_definition .  (3)

	.  reduce 3


state 9
	types : types TYPE .  (90)

	.  reduce 90


state 10
	func_symbol : ID .  (8)

	.  reduce 8


state 11
	func_declaration : types func_symbol . '(' parameters ')' ';'  (6)
	func_definition : types func_symbol . '(' parameters ')' compound_statements  (7)

	'('  shift 12
	.  error


state 12
	func_declaration : types func_symbol '(' . parameters ')' ';'  (6)
	func_definition : types func_symbol '(' . parameters ')' compound_statements  (7)
	parameters : .  (13)

	TYPE  shift 1
	','  reduce 13
	')'  reduce 13

	parameters  goto 13
	types  goto 14


state 13
	func_declaration : types func_symbol '(' parameters . ')' ';'  (6)
	func_definition : types func_symbol '(' parameters . ')' compound_statements  (7)
	parameters : parameters . ',' types ID  (9)
	parameters : parameters . ',' types '*' ID  (10)

	','  shift 15
	')'  shift 16
	.  error


state 14
	parameters : types . ID  (11)
	parameters : types . '*' ID  (12)
	types : types . TYPE  (90)

	TYPE  shift 9
	ID  shift 17
	'*'  shift 18
	.  error


state 15
	parameters : parameters ',' . types ID  (9)
	parameters : parameters ',' . types '*' ID  (10)

	TYPE  shift 1
	.  error

	types  goto 19


state 16
	func_declaration : types func_symbol '(' parameters ')' . ';'  (6)
	func_definition : types func_symbol '(' parameters ')' . compound_statements  (7)

	';'  shift 20
	'{'  shift 21
	.  error

	compound_statements  goto 22
	scope_begin  goto 23


state 17
	parameters : types ID .  (11)

	.  reduce 11


state 18
	parameters : types '*' . ID  (12)

	ID  shift 24
	.  error


state 19
	parameters : parameters ',' types . ID  (9)
	parameters : parameters ',' types . '*' ID  (10)
	types : types . TYPE  (90)

	TYPE  shift 9
	ID  shift 25
	'*'  shift 26
	.  error


state 20
	func_declaration : types func_symbol '(' parameters ')' ';' .  (6)

	.  reduce 6


state 21
	compound_statements : '{' . '}'  (83)
	scope_begin : '{' .  (92)

	'}'  shift 27
	TYPE  reduce 92
	ID  reduce 92
	';'  reduce 92
	'('  reduce 92
	'{'  reduce 92
	Null  reduce 92
	INT  reduce 92
	FLOAT  reduce 92
	CHAR  reduce 92
	STR  reduce 92
	IF  reduce 92
	SWITCH  reduce 92
	WHILE  reduce 92
	DO  reduce 92
	FOR  reduce 92
	RETURN  reduce 92
	BREAK  reduce 92
	CONTINUE  reduce 92


state 22
	func_definition : types func_symbol '(' parameters ')' compound_statements .  (7)

	.  reduce 7


state 23
	compound_statements : scope_begin . compound_statement scope_end  (82)
	expression : .  (35)

	TYPE  shift 1
	ID  shift 28
	'('  shift 29
	'{'  shift 21
	Null  shift 30
	INT  shift 31
	FLOAT  shift 32
	CHAR  shift 33
	STR  shift 34
	IF  shift 35
	SWITCH  shift 36
	WHILE  shift 37
	DO  shift 38
	FOR  shift 39
	RETURN  shift 40
	BREAK  shift 41
	CONTINUE  shift 42
	';'  reduce 35

	types  goto 43
	scalar_declaration  goto 44
	array_declaration  goto 45
	expression  goto 46
	expr_4  goto 47
	expr_3  goto 48
	expr_2  goto 49
	expr_1  goto 50
	variable  goto 51
	literal  goto 52
	compound_statements  goto 53
	compound_statement  goto 54
	scope_begin  goto 23
	statement  goto 55
	if_statement  goto 56
	switch_statement  goto 57
	while_statement  goto 58
	for_statement  goto 59
	return_statement  goto 60
	break_statement  goto 61
	continue_statement  goto 62


state 24
	parameters : types '*' ID .  (12)

	.  reduce 12


state 25
	parameters : parameters ',' types ID .  (9)

	.  reduce 9


state 26
	parameters : parameters ',' types '*' . ID  (10)

	ID  shift 63
	.  error


state 27
	compound_statements : '{' '}' .  (83)

	.  reduce 83


state 28
	variable : ID .  (50)

	.  reduce 50


state 29
	expr_1 : '(' . expression ')'  (43)
	expression : .  (35)

	ID  shift 28
	'('  shift 29
	Null  shift 30
	INT  shift 31
	FLOAT  shift 32
	CHAR  shift 33
	STR  shift 34
	')'  reduce 35

	expression  goto 64
	expr_4  goto 47
	expr_3  goto 48
	expr_2  goto 49
	expr_1  goto 50
	variable  goto 51
	literal  goto 52


state 30
	expr_1 : Null .  (47)

	.  reduce 47


state 31
	literal : INT .  (51)

	.  reduce 51


state 32
	literal : FLOAT .  (52)

	.  reduce 52


state 33
	literal : CHAR .  (53)

	.  reduce 53


state 34
	literal : STR .  (54)

	.  reduce 54


state 35
	if_statement : IF . '(' expression ')' compound_statements  (66)
	if_statement : IF . '(' expression ')' compound_statements ELSE compound_statements  (67)

	'('  shift 65
	.  error


state 36
	switch_statement : SWITCH . '(' expression ')' '{' switch_cases '}'  (68)

	'('  shift 66
	.  error


state 37
	while_statement : WHILE . '(' expression ')' statement  (75)

	'('  shift 67
	.  error


state 38
	while_statement : DO . statement WHILE '(' expression ')' ';'  (76)
	expression : .  (35)

	ID  shift 28
	'('  shift 29
	'{'  shift 21
	Null  shift 30
	INT  shift 31
	FLOAT  shift 32
	CHAR  shift 33
	STR  shift 34
	IF  shift 35
	SWITCH  shift 36
	WHILE  shift 37
	DO  shift 38
	FOR  shift 39
	RETURN  shift 40
	BREAK  shift 41
	CONTINUE  shift 42
	';'  reduce 35

	expression  goto 46
	expr_4  goto 47
	expr_3  goto 48
	expr_2  goto 49
	expr_1  goto 50
	variable  goto 51
	literal  goto 52
	compound_statements  goto 53
	scope_begin  goto 23
	statement  goto 68
	if_statement  goto 56
	switch_statement  goto 57
	while_statement  goto 58
	for_statement  goto 59
	return_statement  goto 60
	break_statement  goto 61
	continue_statement  goto 62


state 39
	for_statement : FOR . '(' for_parameters ')' statement  (77)

	'('  shift 69
	.  error


state 40
	return_statement : RETURN . expression ';'  (79)
	expression : .  (35)

	ID  shift 28
	'('  shift 29
	Null  shift 30
	INT  shift 31
	FLOAT  shift 32
	CHAR  shift 33
	STR  shift 34
	';'  reduce 35

	expression  goto 70
	expr_4  goto 47
	expr_3  goto 48
	expr_2  goto 49
	expr_1  goto 50
	variable  goto 51
	literal  goto 52


state 41
	break_statement : BREAK . ';'  (80)

	';'  shift 71
	.  error


state 42
	continue_statement : CONTINUE . ';'  (81)

	';'  shift 72
	.  error


state 43
	scalar_declaration : types . scalars ';'  (14)
	array_declaration : types . arrays ';'  (21)
	types : types . TYPE  (90)

	TYPE  shift 9
	ID  shift 73
	'*'  shift 74
	.  error

	scalars  goto 75
	scalar  goto 76
	arrays  goto 77
	array  goto 78


state 44
	compound_statement : scalar_declaration .  (87)

	.  reduce 87


state 45
	compound_statement : array_declaration .  (88)

	.  reduce 88


state 46
	statement : expression . ';'  (57)

	';'  shift 79
	.  error


state 47
	expression : expr_4 .  (34)
	expr_4 : expr_4 . '+' expr_3  (36)
	expr_4 : expr_4 . '-' expr_3  (37)

	'+'  shift 80
	'-'  shift 81
	';'  reduce 34
	','  reduce 34
	')'  reduce 34
	']'  reduce 34
	'}'  reduce 34
	':'  reduce 34


state 48
	expr_4 : expr_3 .  (38)
	expr_3 : expr_3 . '*' expr_2  (39)
	expr_3 : expr_3 . '/' expr_2  (40)

	'*'  shift 82
	'/'  shift 83
	';'  reduce 38
	','  reduce 38
	'+'  reduce 38
	'-'  reduce 38
	')'  reduce 38
	']'  reduce 38
	'}'  reduce 38
	':'  reduce 38


state 49
	expr_3 : expr_2 .  (41)

	.  reduce 41


state 50
	expr_2 : expr_1 .  (42)

	.  reduce 42


state 51
	expr_1 : variable . '(' func_call_parameters ')'  (44)
	expr_1 : variable .  (45)

	'('  shift 84
	';'  reduce 45
	','  reduce 45
	'+'  reduce 45
	'-'  reduce 45
	'*'  reduce 45
	'/'  reduce 45
	')'  reduce 45
	']'  reduce 45
	'}'  reduce 45
	':'  reduce 45


state 52
	expr_1 : literal .  (46)

	.  reduce 46


state 53
	statement : compound_statements .  (65)

	.  reduce 65


state 54
	compound_statements : scope_begin compound_statement . scope_end  (82)
	compound_statement : compound_statement . scalar_declaration  (84)
	compound_statement : compound_statement . array_declaration  (85)
	compound_statement : compound_statement . statement  (86)
	expression : .  (35)

	TYPE  shift 1
	ID  shift 28
	'('  shift 29
	'{'  shift 21
	'}'  shift 85
	Null  shift 30
	INT  shift 31
	FLOAT  shift 32
	CHAR  shift 33
	STR  shift 34
	IF  shift 35
	SWITCH  shift 36
	WHILE  shift 37
	DO  shift 38
	FOR  shift 39
	RETURN  shift 40
	BREAK  shift 41
	CONTINUE  shift 42
	';'  reduce 35

	types  goto 43
	scalar_declaration  goto 86
	array_declaration  goto 87
	expression  goto 46
	expr_4  goto 47
	expr_3  goto 48
	expr_2  goto 49
	expr_1  goto 50
	variable  goto 51
	literal  goto 52
	compound_statements  goto 53
	scope_begin  goto 23
	scope_end  goto 88
	statement  goto 89
	if_statement  goto 56
	switch_statement  goto 57
	while_statement  goto 58
	for_statement  goto 59
	return_statement  goto 60
	break_statement  goto 61
	continue_statement  goto 62


state 55
	compound_statement : statement .  (89)

	.  reduce 89


state 56
	statement : if_statement .  (58)

	.  reduce 58


state 57
	statement : switch_statement .  (59)

	.  reduce 59


state 58
	statement : while_statement .  (60)

	.  reduce 60


state 59
	statement : for_statement .  (61)

	.  reduce 61


state 60
	statement : return_statement .  (62)

	.  reduce 62


state 61
	statement : break_statement .  (63)

	.  reduce 63


state 62
	statement : continue_statement .  (64)

	.  reduce 64


state 63
	parameters : parameters ',' types '*' ID .  (10)

	.  reduce 10


state 64
	expr_1 : '(' expression . ')'  (43)

	')'  shift 90
	.  error


state 65
	if_statement : IF '(' . expression ')' compound_statements  (66)
	if_statement : IF '(' . expression ')' compound_statements ELSE compound_statements  (67)
	expression : .  (35)

	ID  shift 28
	'('  shift 29
	Null  shift 30
	INT  shift 31
	FLOAT  shift 32
	CHAR  shift 33
	STR  shift 34
	')'  reduce 35

	expression  goto 91
	expr_4  goto 47
	expr_3  goto 48
	expr_2  goto 49
	expr_1  goto 50
	variable  goto 51
	literal  goto 52


state 66
	switch_statement : SWITCH '(' . expression ')' '{' switch_cases '}'  (68)
	expression : .  (35)

	ID  shift 28
	'('  shift 29
	Null  shift 30
	INT  shift 31
	FLOAT  shift 32
	CHAR  shift 33
	STR  shift 34
	')'  reduce 35

	expression  goto 92
	expr_4  goto 47
	expr_3  goto 48
	expr_2  goto 49
	expr_1  goto 50
	variable  goto 51
	literal  goto 52


state 67
	while_statement : WHILE '(' . expression ')' statement  (75)
	expression : .  (35)

	ID  shift 28
	'('  shift 29
	Null  shift 30
	INT  shift 31
	FLOAT  shift 32
	CHAR  shift 33
	STR  shift 34
	')'  reduce 35

	expression  goto 93
	expr_4  goto 47
	expr_3  goto 48
	expr_2  goto 49
	expr_1  goto 50
	variable  goto 51
	literal  goto 52


state 68
	while_statement : DO statement . WHILE '(' expression ')' ';'  (76)

	WHILE  shift 94
	.  error


state 69
	for_statement : FOR '(' . for_parameters ')' statement  (77)
	expression : .  (35)

	ID  shift 28
	'('  shift 29
	Null  shift 30
	INT  shift 31
	FLOAT  shift 32
	CHAR  shift 33
	STR  shift 34
	';'  reduce 35

	expression  goto 95
	expr_4  goto 47
	expr_3  goto 48
	expr_2  goto 49
	expr_1  goto 50
	variable  goto 51
	literal  goto 52
	for_parameters  goto 96


state 70
	return_statement : RETURN expression . ';'  (79)

	';'  shift 97
	.  error


state 71
	break_statement : BREAK ';' .  (80)

	.  reduce 80


state 72
	continue_statement : CONTINUE ';' .  (81)

	.  reduce 81


state 73
	scalar : ID . '=' expression  (18)
	scalar : ID .  (20)
	array : ID . array_shape '=' '{' array_content_elements '}'  (25)
	array : ID . array_shape  (27)

	'='  shift 98
	'['  shift 99
	';'  reduce 20
	','  reduce 20

	array_shape  goto 100


state 74
	scalar : '*' . ID '=' expression  (17)
	scalar : '*' . ID  (19)
	array : '*' . ID array_shape '=' '{' array_content_elements '}'  (24)
	array : '*' . ID array_shape  (26)

	ID  shift 101
	.  error


state 75
	scalar_declaration : types scalars . ';'  (14)
	scalars : scalars . ',' scalar  (15)

	';'  shift 102
	','  shift 103
	.  error


state 76
	scalars : scalar .  (16)

	.  reduce 16


state 77
	array_declaration : types arrays . ';'  (21)
	arrays : arrays . ',' array  (22)

	';'  shift 104
	','  shift 105
	.  error


state 78
	arrays : array .  (23)

	.  reduce 23


state 79
	statement : expression ';' .  (57)

	.  reduce 57


state 80
	expr_4 : expr_4 '+' . expr_3  (36)

	ID  shift 28
	'('  shift 29
	Null  shift 30
	INT  shift 31
	FLOAT  shift 32
	CHAR  shift 33
	STR  shift 34
	.  error

	expr_3  goto 106
	expr_2  goto 49
	expr_1  goto 50
	variable  goto 51
	literal  goto 52


state 81
	expr_4 : expr_4 '-' . expr_3  (37)

	ID  shift 28
	'('  shift 29
	Null  shift 30
	INT  shift 31
	FLOAT  shift 32
	CHAR  shift 33
	STR  shift 34
	.  error

	expr_3  goto 107
	expr_2  goto 49
	expr_1  goto 50
	variable  goto 51
	literal  goto 52


state 82
	expr_3 : expr_3 '*' . expr_2  (39)

	ID  shift 28
	'('  shift 29
	Null  shift 30
	INT  shift 31
	FLOAT  shift 32
	CHAR  shift 33
	STR  shift 34
	.  error

	expr_2  goto 108
	expr_1  goto 50
	variable  goto 51
	literal  goto 52


state 83
	expr_3 : expr_3 '/' . expr_2  (40)

	ID  shift 28
	'('  shift 29
	Null  shift 30
	INT  shift 31
	FLOAT  shift 32
	CHAR  shift 33
	STR  shift 34
	.  error

	expr_2  goto 109
	expr_1  goto 50
	variable  goto 51
	literal  goto 52


state 84
	expr_1 : variable '(' . func_call_parameters ')'  (44)
	expression : .  (35)

	ID  shift 28
	'('  shift 29
	Null  shift 30
	INT  shift 31
	FLOAT  shift 32
	CHAR  shift 33
	STR  shift 34
	','  reduce 35
	')'  reduce 35

	expression  goto 110
	expr_4  goto 47
	expr_3  goto 48
	expr_2  goto 49
	expr_1  goto 50
	variable  goto 51
	literal  goto 52
	func_call_parameters  goto 111


state 85
	scope_end : '}' .  (93)

	.  reduce 93


state 86
	compound_statement : compound_statement scalar_declaration .  (84)

	.  reduce 84


state 87
	compound_statement : compound_statement array_declaration .  (85)

	.  reduce 85


state 88
	compound_statements : scope_begin compound_statement scope_end .  (82)

	.  reduce 82


state 89
	compound_statement : compound_statement statement .  (86)

	.  reduce 86


state 90
	expr_1 : '(' expression ')' .  (43)

	.  reduce 43


state 91
	if_statement : IF '(' expression . ')' compound_statements  (66)
	if_statement : IF '(' expression . ')' compound_statements ELSE compound_statements  (67)

	')'  shift 112
	.  error


state 92
	switch_statement : SWITCH '(' expression . ')' '{' switch_cases '}'  (68)

	')'  shift 113
	.  error


state 93
	while_statement : WHILE '(' expression . ')' statement  (75)

	')'  shift 114
	.  error


state 94
	while_statement : DO statement WHILE . '(' expression ')' ';'  (76)

	'('  shift 115
	.  error


state 95
	for_parameters : expression . ';' expression ';' expression  (78)

	';'  shift 116
	.  error


state 96
	for_statement : FOR '(' for_parameters . ')' statement  (77)

	')'  shift 117
	.  error


state 97
	return_statement : RETURN expression ';' .  (79)

	.  reduce 79


state 98
	scalar : ID '=' . expression  (18)
	expression : .  (35)

	ID  shift 28
	'('  shift 29
	Null  shift 30
	INT  shift 31
	FLOAT  shift 32
	CHAR  shift 33
	STR  shift 34
	';'  reduce 35
	','  reduce 35

	expression  goto 118
	expr_4  goto 47
	expr_3  goto 48
	expr_2  goto 49
	expr_1  goto 50
	variable  goto 51
	literal  goto 52


state 99
	array_shape : '[' . expression ']'  (29)
	expression : .  (35)

	ID  shift 28
	'('  shift 29
	Null  shift 30
	INT  shift 31
	FLOAT  shift 32
	CHAR  shift 33
	STR  shift 34
	']'  reduce 35

	expression  goto 119
	expr_4  goto 47
	expr_3  goto 48
	expr_2  goto 49
	expr_1  goto 50
	variable  goto 51
	literal  goto 52


state 100
	array : ID array_shape . '=' '{' array_content_elements '}'  (25)
	array : ID array_shape .  (27)
	array_shape : array_shape . '[' expression ']'  (28)

	'='  shift 120
	'['  shift 121
	';'  reduce 27
	','  reduce 27


state 101
	scalar : '*' ID . '=' expression  (17)
	scalar : '*' ID .  (19)
	array : '*' ID . array_shape '=' '{' array_content_elements '}'  (24)
	array : '*' ID . array_shape  (26)

	'='  shift 122
	'['  shift 99
	';'  reduce 19
	','  reduce 19

	array_shape  goto 123


state 102
	scalar_declaration : types scalars ';' .  (14)

	.  reduce 14


state 103
	scalars : scalars ',' . scalar  (15)

	ID  shift 124
	'*'  shift 125
	.  error

	scalar  goto 126


state 104
	array_declaration : types arrays ';' .  (21)

	.  reduce 21


state 105
	arrays : arrays ',' . array  (22)

	ID  shift 127
	'*'  shift 128
	.  error

	array  goto 129


state 106
	expr_4 : expr_4 '+' expr_3 .  (36)
	expr_3 : expr_3 . '*' expr_2  (39)
	expr_3 : expr_3 . '/' expr_2  (40)

	'*'  shift 82
	'/'  shift 83
	';'  reduce 36
	','  reduce 36
	'+'  reduce 36
	'-'  reduce 36
	')'  reduce 36
	']'  reduce 36
	'}'  reduce 36
	':'  reduce 36


state 107
	expr_4 : expr_4 '-' expr_3 .  (37)
	expr_3 : expr_3 . '*' expr_2  (39)
	expr_3 : expr_3 . '/' expr_2  (40)

	'*'  shift 82
	'/'  shift 83
	';'  reduce 37
	','  reduce 37
	'+'  reduce 37
	'-'  reduce 37
	')'  reduce 37
	']'  reduce 37
	'}'  reduce 37
	':'  reduce 37


state 108
	expr_3 : expr_3 '*' expr_2 .  (39)

	.  reduce 39


state 109
	expr_3 : expr_3 '/' expr_2 .  (40)

	.  reduce 40


state 110
	func_call_parameters : expression .  (49)

	.  reduce 49


state 111
	expr_1 : variable '(' func_call_parameters . ')'  (44)
	func_call_parameters : func_call_parameters . ',' expression  (48)

	','  shift 130
	')'  shift 131
	.  error


state 112
	if_statement : IF '(' expression ')' . compound_statements  (66)
	if_statement : IF '(' expression ')' . compound_statements ELSE compound_statements  (67)

	'{'  shift 21
	.  error

	compound_statements  goto 132
	scope_begin  goto 23


state 113
	switch_statement : SWITCH '(' expression ')' . '{' switch_cases '}'  (68)

	'{'  shift 133
	.  error


state 114
	while_statement : WHILE '(' expression ')' . statement  (75)
	expression : .  (35)

	ID  shift 28
	'('  shift 29
	'{'  shift 21
	Null  shift 30
	INT  shift 31
	FLOAT  shift 32
	CHAR  shift 33
	STR  shift 34
	IF  shift 35
	SWITCH  shift 36
	WHILE  shift 37
	DO  shift 38
	FOR  shift 39
	RETURN  shift 40
	BREAK  shift 41
	CONTINUE  shift 42
	';'  reduce 35

	expression  goto 46
	expr_4  goto 47
	expr_3  goto 48
	expr_2  goto 49
	expr_1  goto 50
	variable  goto 51
	literal  goto 52
	compound_statements  goto 53
	scope_begin  goto 23
	statement  goto 134
	if_statement  goto 56
	switch_statement  goto 57
	while_statement  goto 58
	for_statement  goto 59
	return_statement  goto 60
	break_statement  goto 61
	continue_statement  goto 62


state 115
	while_statement : DO statement WHILE '(' . expression ')' ';'  (76)
	expression : .  (35)

	ID  shift 28
	'('  shift 29
	Null  shift 30
	INT  shift 31
	FLOAT  shift 32
	CHAR  shift 33
	STR  shift 34
	')'  reduce 35

	expression  goto 135
	expr_4  goto 47
	expr_3  goto 48
	expr_2  goto 49
	expr_1  goto 50
	variable  goto 51
	literal  goto 52


state 116
	for_parameters : expression ';' . expression ';' expression  (78)
	expression : .  (35)

	ID  shift 28
	'('  shift 29
	Null  shift 30
	INT  shift 31
	FLOAT  shift 32
	CHAR  shift 33
	STR  shift 34
	';'  reduce 35

	expression  goto 136
	expr_4  goto 47
	expr_3  goto 48
	expr_2  goto 49
	expr_1  goto 50
	variable  goto 51
	literal  goto 52


state 117
	for_statement : FOR '(' for_parameters ')' . statement  (77)
	expression : .  (35)

	ID  shift 28
	'('  shift 29
	'{'  shift 21
	Null  shift 30
	INT  shift 31
	FLOAT  shift 32
	CHAR  shift 33
	STR  shift 34
	IF  shift 35
	SWITCH  shift 36
	WHILE  shift 37
	DO  shift 38
	FOR  shift 39
	RETURN  shift 40
	BREAK  shift 41
	CONTINUE  shift 42
	';'  reduce 35

	expression  goto 46
	expr_4  goto 47
	expr_3  goto 48
	expr_2  goto 49
	expr_1  goto 50
	variable  goto 51
	literal  goto 52
	compound_statements  goto 53
	scope_begin  goto 23
	statement  goto 137
	if_statement  goto 56
	switch_statement  goto 57
	while_statement  goto 58
	for_statement  goto 59
	return_statement  goto 60
	break_statement  goto 61
	continue_statement  goto 62


state 118
	scalar : ID '=' expression .  (18)

	.  reduce 18


state 119
	array_shape : '[' expression . ']'  (29)

	']'  shift 138
	.  error


state 120
	array : ID array_shape '=' . '{' array_content_elements '}'  (25)

	'{'  shift 139
	.  error


state 121
	array_shape : array_shape '[' . expression ']'  (28)
	expression : .  (35)

	ID  shift 28
	'('  shift 29
	Null  shift 30
	INT  shift 31
	FLOAT  shift 32
	CHAR  shift 33
	STR  shift 34
	']'  reduce 35

	expression  goto 140
	expr_4  goto 47
	expr_3  goto 48
	expr_2  goto 49
	expr_1  goto 50
	variable  goto 51
	literal  goto 52


state 122
	scalar : '*' ID '=' . expression  (17)
	expression : .  (35)

	ID  shift 28
	'('  shift 29
	Null  shift 30
	INT  shift 31
	FLOAT  shift 32
	CHAR  shift 33
	STR  shift 34
	';'  reduce 35
	','  reduce 35

	expression  goto 141
	expr_4  goto 47
	expr_3  goto 48
	expr_2  goto 49
	expr_1  goto 50
	variable  goto 51
	literal  goto 52


state 123
	array : '*' ID array_shape . '=' '{' array_content_elements '}'  (24)
	array : '*' ID array_shape .  (26)
	array_shape : array_shape . '[' expression ']'  (28)

	'='  shift 142
	'['  shift 121
	';'  reduce 26
	','  reduce 26


state 124
	scalar : ID . '=' expression  (18)
	scalar : ID .  (20)

	'='  shift 98
	';'  reduce 20
	','  reduce 20


state 125
	scalar : '*' . ID '=' expression  (17)
	scalar : '*' . ID  (19)

	ID  shift 143
	.  error


state 126
	scalars : scalars ',' scalar .  (15)

	.  reduce 15


state 127
	array : ID . array_shape '=' '{' array_content_elements '}'  (25)
	array : ID . array_shape  (27)

	'['  shift 99
	.  error

	array_shape  goto 100


state 128
	array : '*' . ID array_shape '=' '{' array_content_elements '}'  (24)
	array : '*' . ID array_shape  (26)

	ID  shift 144
	.  error


state 129
	arrays : arrays ',' array .  (22)

	.  reduce 22


state 130
	func_call_parameters : func_call_parameters ',' . expression  (48)
	expression : .  (35)

	ID  shift 28
	'('  shift 29
	Null  shift 30
	INT  shift 31
	FLOAT  shift 32
	CHAR  shift 33
	STR  shift 34
	','  reduce 35
	')'  reduce 35

	expression  goto 145
	expr_4  goto 47
	expr_3  goto 48
	expr_2  goto 49
	expr_1  goto 50
	variable  goto 51
	literal  goto 52


state 131
	expr_1 : variable '(' func_call_parameters ')' .  (44)

	.  reduce 44


state 132
	if_statement : IF '(' expression ')' compound_statements .  (66)
	if_statement : IF '(' expression ')' compound_statements . ELSE compound_statements  (67)

	ELSE  shift 146
	TYPE  reduce 66
	ID  reduce 66
	';'  reduce 66
	'('  reduce 66
	'{'  reduce 66
	'}'  reduce 66
	Null  reduce 66
	INT  reduce 66
	FLOAT  reduce 66
	CHAR  reduce 66
	STR  reduce 66
	IF  reduce 66
	SWITCH  reduce 66
	CASE  reduce 66
	DEFAULT  reduce 66
	WHILE  reduce 66
	DO  reduce 66
	FOR  reduce 66
	RETURN  reduce 66
	BREAK  reduce 66
	CONTINUE  reduce 66


state 133
	switch_statement : SWITCH '(' expression ')' '{' . switch_cases '}'  (68)

	CASE  shift 147
	DEFAULT  shift 148
	.  error

	switch_cases  goto 149
	switch_case  goto 150


state 134
	while_statement : WHILE '(' expression ')' statement .  (75)

	.  reduce 75


state 135
	while_statement : DO statement WHILE '(' expression . ')' ';'  (76)

	')'  shift 151
	.  error


state 136
	for_parameters : expression ';' expression . ';' expression  (78)

	';'  shift 152
	.  error


state 137
	for_statement : FOR '(' for_parameters ')' statement .  (77)

	.  reduce 77


state 138
	array_shape : '[' expression ']' .  (29)

	.  reduce 29


state 139
	array : ID array_shape '=' '{' . array_content_elements '}'  (25)
	expression : .  (35)

	ID  shift 28
	'('  shift 29
	'{'  shift 153
	Null  shift 30
	INT  shift 31
	FLOAT  shift 32
	CHAR  shift 33
	STR  shift 34
	','  reduce 35
	'}'  reduce 35

	array_content_elements  goto 154
	array_content_element  goto 155
	expression  goto 156
	expr_4  goto 47
	expr_3  goto 48
	expr_2  goto 49
	expr_1  goto 50
	variable  goto 51
	literal  goto 52


state 140
	array_shape : array_shape '[' expression . ']'  (28)

	']'  shift 157
	.  error


state 141
	scalar : '*' ID '=' expression .  (17)

	.  reduce 17


state 142
	array : '*' ID array_shape '=' . '{' array_content_elements '}'  (24)

	'{'  shift 158
	.  error


state 143
	scalar : '*' ID . '=' expression  (17)
	scalar : '*' ID .  (19)

	'='  shift 122
	';'  reduce 19
	','  reduce 19


state 144
	array : '*' ID . array_shape '=' '{' array_content_elements '}'  (24)
	array : '*' ID . array_shape  (26)

	'['  shift 99
	.  error

	array_shape  goto 123


state 145
	func_call_parameters : func_call_parameters ',' expression .  (48)

	.  reduce 48


state 146
	if_statement : IF '(' expression ')' compound_statements ELSE . compound_statements  (67)

	'{'  shift 21
	.  error

	compound_statements  goto 159
	scope_begin  goto 23


state 147
	switch_case : CASE . expression ':' statements  (71)
	switch_case : CASE . expression ':'  (73)
	expression : .  (35)

	ID  shift 28
	'('  shift 29
	Null  shift 30
	INT  shift 31
	FLOAT  shift 32
	CHAR  shift 33
	STR  shift 34
	':'  reduce 35

	expression  goto 160
	expr_4  goto 47
	expr_3  goto 48
	expr_2  goto 49
	expr_1  goto 50
	variable  goto 51
	literal  goto 52


state 148
	switch_case : DEFAULT . ':' statements  (72)
	switch_case : DEFAULT . ':'  (74)

	':'  shift 161
	.  error


state 149
	switch_statement : SWITCH '(' expression ')' '{' switch_cases . '}'  (68)
	switch_cases : switch_cases . switch_case  (69)

	'}'  shift 162
	CASE  shift 147
	DEFAULT  shift 148
	.  error

	switch_case  goto 163


state 150
	switch_cases : switch_case .  (70)

	.  reduce 70


state 151
	while_statement : DO statement WHILE '(' expression ')' . ';'  (76)

	';'  shift 164
	.  error


state 152
	for_parameters : expression ';' expression ';' . expression  (78)
	expression : .  (35)

	ID  shift 28
	'('  shift 29
	Null  shift 30
	INT  shift 31
	FLOAT  shift 32
	CHAR  shift 33
	STR  shift 34
	')'  reduce 35

	expression  goto 165
	expr_4  goto 47
	expr_3  goto 48
	expr_2  goto 49
	expr_1  goto 50
	variable  goto 51
	literal  goto 52


state 153
	array_content_element : '{' . array_content_elements '}'  (32)
	expression : .  (35)

	ID  shift 28
	'('  shift 29
	'{'  shift 153
	Null  shift 30
	INT  shift 31
	FLOAT  shift 32
	CHAR  shift 33
	STR  shift 34
	','  reduce 35
	'}'  reduce 35

	array_content_elements  goto 166
	array_content_element  goto 155
	expression  goto 156
	expr_4  goto 47
	expr_3  goto 48
	expr_2  goto 49
	expr_1  goto 50
	variable  goto 51
	literal  goto 52


state 154
	array : ID array_shape '=' '{' array_content_elements . '}'  (25)

	'}'  shift 167
	.  error


state 155
	array_content_elements : array_content_element . ',' array_content_elements  (30)
	array_content_elements : array_content_element .  (31)

	','  shift 168
	'}'  reduce 31


state 156
	array_content_element : expression .  (33)

	.  reduce 33


state 157
	array_shape : array_shape '[' expression ']' .  (28)

	.  reduce 28


state 158
	array : '*' ID array_shape '=' '{' . array_content_elements '}'  (24)
	expression : .  (35)

	ID  shift 28
	'('  shift 29
	'{'  shift 153
	Null  shift 30
	INT  shift 31
	FLOAT  shift 32
	CHAR  shift 33
	STR  shift 34
	','  reduce 35
	'}'  reduce 35

	array_content_elements  goto 169
	array_content_element  goto 155
	expression  goto 156
	expr_4  goto 47
	expr_3  goto 48
	expr_2  goto 49
	expr_1  goto 50
	variable  goto 51
	literal  goto 52


state 159
	if_statement : IF '(' expression ')' compound_statements ELSE compound_statements .  (67)

	.  reduce 67


state 160
	switch_case : CASE expression . ':' statements  (71)
	switch_case : CASE expression . ':'  (73)

	':'  shift 170
	.  error


state 161
	switch_case : DEFAULT ':' . statements  (72)
	switch_case : DEFAULT ':' .  (74)
	expression : .  (35)

	ID  shift 28
	'('  shift 29
	'{'  shift 21
	Null  shift 30
	INT  shift 31
	FLOAT  shift 32
	CHAR  shift 33
	STR  shift 34
	IF  shift 35
	SWITCH  shift 36
	WHILE  shift 37
	DO  shift 38
	FOR  shift 39
	RETURN  shift 40
	BREAK  shift 41
	CONTINUE  shift 42
	';'  reduce 35
	'}'  reduce 74
	CASE  reduce 74
	DEFAULT  reduce 74

	expression  goto 46
	expr_4  goto 47
	expr_3  goto 48
	expr_2  goto 49
	expr_1  goto 50
	variable  goto 51
	literal  goto 52
	compound_statements  goto 53
	scope_begin  goto 23
	statements  goto 171
	statement  goto 172
	if_statement  goto 56
	switch_statement  goto 57
	while_statement  goto 58
	for_statement  goto 59
	return_statement  goto 60
	break_statement  goto 61
	continue_statement  goto 62


state 162
	switch_statement : SWITCH '(' expression ')' '{' switch_cases '}' .  (68)

	.  reduce 68


state 163
	switch_cases : switch_cases switch_case .  (69)

	.  reduce 69


state 164
	while_statement : DO statement WHILE '(' expression ')' ';' .  (76)

	.  reduce 76


state 165
	for_parameters : expression ';' expression ';' expression .  (78)

	.  reduce 78


state 166
	array_content_element : '{' array_content_elements . '}'  (32)

	'}'  shift 173
	.  error


state 167
	array : ID array_shape '=' '{' array_content_elements '}' .  (25)

	.  reduce 25


state 168
	array_content_elements : array_content_element ',' . array_content_elements  (30)
	expression : .  (35)

	ID  shift 28
	'('  shift 29
	'{'  shift 153
	Null  shift 30
	INT  shift 31
	FLOAT  shift 32
	CHAR  shift 33
	STR  shift 34
	','  reduce 35
	'}'  reduce 35

	array_content_elements  goto 174
	array_content_element  goto 155
	expression  goto 156
	expr_4  goto 47
	expr_3  goto 48
	expr_2  goto 49
	expr_1  goto 50
	variable  goto 51
	literal  goto 52


state 169
	array : '*' ID array_shape '=' '{' array_content_elements . '}'  (24)

	'}'  shift 175
	.  error


state 170
	switch_case : CASE expression ':' . statements  (71)
	switch_case : CASE expression ':' .  (73)
	expression : .  (35)

	ID  shift 28
	'('  shift 29
	'{'  shift 21
	Null  shift 30
	INT  shift 31
	FLOAT  shift 32
	CHAR  shift 33
	STR  shift 34
	IF  shift 35
	SWITCH  shift 36
	WHILE  shift 37
	DO  shift 38
	FOR  shift 39
	RETURN  shift 40
	BREAK  shift 41
	CONTINUE  shift 42
	';'  reduce 35
	'}'  reduce 73
	CASE  reduce 73
	DEFAULT  reduce 73

	expression  goto 46
	expr_4  goto 47
	expr_3  goto 48
	expr_2  goto 49
	expr_1  goto 50
	variable  goto 51
	literal  goto 52
	compound_statements  goto 53
	scope_begin  goto 23
	statements  goto 176
	statement  goto 172
	if_statement  goto 56
	switch_statement  goto 57
	while_statement  goto 58
	for_statement  goto 59
	return_statement  goto 60
	break_statement  goto 61
	continue_statement  goto 62


state 171
	statements : statements . statement  (55)
	switch_case : DEFAULT ':' statements .  (72)
	expression : .  (35)

	ID  shift 28
	'('  shift 29
	'{'  shift 21
	Null  shift 30
	INT  shift 31
	FLOAT  shift 32
	CHAR  shift 33
	STR  shift 34
	IF  shift 35
	SWITCH  shift 36
	WHILE  shift 37
	DO  shift 38
	FOR  shift 39
	RETURN  shift 40
	BREAK  shift 41
	CONTINUE  shift 42
	';'  reduce 35
	'}'  reduce 72
	CASE  reduce 72
	DEFAULT  reduce 72

	expression  goto 46
	expr_4  goto 47
	expr_3  goto 48
	expr_2  goto 49
	expr_1  goto 50
	variable  goto 51
	literal  goto 52
	compound_statements  goto 53
	scope_begin  goto 23
	statement  goto 177
	if_statement  goto 56
	switch_statement  goto 57
	while_statement  goto 58
	for_statement  goto 59
	return_statement  goto 60
	break_statement  goto 61
	continue_statement  goto 62


state 172
	statements : statement .  (56)

	.  reduce 56


state 173
	array_content_element : '{' array_content_elements '}' .  (32)

	.  reduce 32


state 174
	array_content_elements : array_content_element ',' array_content_elements .  (30)

	.  reduce 30


state 175
	array : '*' ID array_shape '=' '{' array_content_elements '}' .  (24)

	.  reduce 24


state 176
	statements : statements . statement  (55)
	switch_case : CASE expression ':' statements .  (71)
	expression : .  (35)

	ID  shift 28
	'('  shift 29
	'{'  shift 21
	Null  shift 30
	INT  shift 31
	FLOAT  shift 32
	CHAR  shift 33
	STR  shift 34
	IF  shift 35
	SWITCH  shift 36
	WHILE  shift 37
	DO  shift 38
	FOR  shift 39
	RETURN  shift 40
	BREAK  shift 41
	CONTINUE  shift 42
	';'  reduce 35
	'}'  reduce 71
	CASE  reduce 71
	DEFAULT  reduce 71

	expression  goto 46
	expr_4  goto 47
	expr_3  goto 48
	expr_2  goto 49
	expr_1  goto 50
	variable  goto 51
	literal  goto 52
	compound_statements  goto 53
	scope_begin  goto 23
	statement  goto 177
	if_statement  goto 56
	switch_statement  goto 57
	while_statement  goto 58
	for_statement  goto 59
	return_statement  goto 60
	break_statement  goto 61
	continue_statement  goto 62


state 177
	statements : statements statement .  (55)

	.  reduce 55


52 terminals, 41 nonterminals
94 grammar rules, 178 states

grammar parser grammar
symbol# value# symbol
     0      0  $end
     1    256  error
     2    257  TYPE
     3    258  ID
     4     59  ';'
     5     44  ','
     6     61  '='
     7    259  OR
     8    260  AND
     9    124  '|'
    10     94  '^'
    11     38  '&'
    12    261  EQUAL
    13    262  NOT_EQUAL
    14     60  '<'
    15     62  '>'
    16    263  GE
    17    264  LE
    18    265  RS
    19    266  LS
    20     43  '+'
    21     45  '-'
    22     42  '*'
    23     47  '/'
    24     37  '%'
    25    267  INC
    26    268  DEC
    27    126  '~'
    28     33  '!'
    29     40  '('
    30     41  ')'
    31     91  '['
    32     93  ']'
    33    123  '{'
    34    125  '}'
    35    269  Null
    36    270  INT
    37    271  FLOAT
    38    272  CHAR
    39    273  STR
    40    274  IF
    41    275  ELSE
    42    276  SWITCH
    43    277  CASE
    44    278  DEFAULT
    45    279  WHILE
    46    280  DO
    47    281  FOR
    48    282  RETURN
    49    283  BREAK
    50    284  CONTINUE
    51     58  ':'
    52    285  $accept
    53    286  program
    54    287  code
    55    288  func_declaration
    56    289  func_definition
    57    290  func_symbol
    58    291  parameters
    59    292  types
    60    293  scalar_declaration
    61    294  scalars
    62    295  scalar
    63    296  array_declaration
    64    297  arrays
    65    298  array
    66    299  array_shape
    67    300  array_content_elements
    68    301  array_content_element
    69    302  expression
    70    303  expr_4
    71    304  expr_3
    72    305  expr_2
    73    306  expr_1
    74    307  variable
    75    308  literal
    76    309  func_call_parameters
    77    310  compound_statements
    78    311  compound_statement
    79    312  scope_begin
    80    313  scope_end
    81    314  statements
    82    315  statement
    83    316  if_statement
    84    317  switch_statement
    85    318  switch_cases
    86    319  switch_case
    87    320  while_statement
    88    321  for_statement
    89    322  for_parameters
    90    323  return_statement
    91    324  break_statement
    92    325  continue_statement
